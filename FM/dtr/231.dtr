Experiment( SubjectCode)
{
  Context()
  {
    AssignmentGroup()
    {
      ExperimentName = "REDMO 25";
      new Symbol = 1;
      DataFileDestination = ".";
      DataFileTrialFormat = "%SubjectCode%";
      SkipBoundingBlockDisplays = 0;
      RandomizeTrials = 0;
      StopKey = de.pxlab.pxl.KeyCodes.ENTER_KEY;
    }
    Session()
    {
      Instruction()
      {
        Text = " ";
      }
    }
    Block();
    Trial:INST1( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["Thank you for your interest in our study! ", " ", "In this task, you will be presented with a series of letters on the screen. For each letter shown, you will need to respond by typing a designated two-finger sequence by using the eight orange markers on the keyboard in front of you. The two-finger sequence will be different for each letter shown. Before you begin, please rest your fingers on the eight orange markers on the keyboard in front of you.", " ", "It is very important that you try to enter each two-finger sequence correctly for each letter presented on the screen. This task tests how well you can learn each two-finger sequence, so it is very important that you pay attention and take this task seriously. After the task, you will be tested on how well you learned and remembered the two-finger sequences for the letters."];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "continue";
        LocationY = 300;
        Width = 200;
        Height = 60;
      }
    }
    Trial:INST2( Picture.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "In the initial learning phase of the experiment, you will be presented with a letter along with an image of a left hand and a right hand (see below). Two fingers on either the left hand or the right hand will quickly light up in order to reveal the two-finger sequenced related to that letter. The first finger to light up in the sequence will be in yellow, and the second finger to light up in the sequence will be in blue. After the two-finger sequence is flashed on the screen, the image of the two hands will disappear. Once the two hands disappear from the screen, you will just see the letter. Now enter the two-finger sequence for that letter previously shown.";
        LocationY = -200;
        FontSize = 24;
      }
      Picture()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Directory = "./images";
        LocationY = 80;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "continue";
        LocationY = 300;
        Width = 200;
        Height = 60;
      }
    }
    Trial:INST3( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["While performing this task, please try to keep your other fingers on their markers on the keyboard when they are not part of the two-finger sequence. It is important that you keep your eyes focused on the center of the screen where the individual letters appear. Please try to perceive the two-finger sequence presented below that letter from the corner of your eye, that is, do not let your eyes wander to the image of the two hands. Look at the letter and remember what the two-finger sequence is for that letter. It is quite difficult to learn the two-finger sequences. Therefore, please try your best to focus in order to do well.", " ", "Six of the twelve two-finger sequences involve two fingers on your left hand. These two-finger sequences are for the letters A, B, C, D, E, and F. The other six two-finger sequences involve your right hand. These two-finger sequences are for the letters U, V, W, X, Y, and Z. The two-finger sequence for any particular letter will always relate to the same hand for which it was originally shown. ", " ", "Once you click on Start!, you will have 10 seconds to rest your fingers on the buttons marked on the keyboard and to focus on the center of the screen. Then, the learning phase will begin."];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INST4( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "This was a first pass with all the letters and corresponding two-finger movements. In the second part of the learning phase, you will be presented with the letters and two-finger sequences just as you were in the first part of the learning phase. Please note that the second part of this phase is longer than the first part. Each letter will be presented on the screen several times during this phase, so you will have the opportunity to learn the correct two-finger sequence for each letter.";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INSTAB( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["The two-finger sequences for these letters shown consist of finger movements on the left hand. When you are presented with each letter, try your hardest to remember the appropriate two-finger sequence you learned for that letter and press those keys.", "When you click on Start!, you will have 10 seconds to rest your fingers back on the buttons marked on the keyboard. Then, the first letter will appear. Please leave your fingers on their markers when they are not part of the two-finger response for a letter shown."];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:IBILD( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "In the following task, you are asked to make an aesthetic evaluation of symbols, that is, an assessment of how attractive you think a symbol is. You will gradually unveil several Chinese characters by clicking on the gray boxes on the screen. A complete Chinese character will be revealed when you have clicked all of boxes. After the Chinese character has been fully uncovered, you will be asked to rate its aesthetic appeal at the bottom of the screen. Minus (-) signs indicate that you find the image unappealing. Plus (+) signs indicate that you find the image appealing. Please click which set of minus or plus signs most correctly matches your aesthetic evaluation.";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "OK";
        LocationY = 300;
        Width = 200;
        Height = 60;
      }
    }
    Trial:INSTTEST( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["A memory test will now take place. You will again be presented with letters from the learning phase. Please remember the corresponding two-finger sequence for that letter and enter it. ", "When you click on Start!, you will have 10 seconds to rest your fingers on the markers on the keyboard as before. Then, the first letter will appear as in the previous task. Please leave your fingers on the markers during the task if they are not required in the two-finger sequence for a particular letter. "];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INSTRECALL( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["In the following test phase, you will be asked to type the two-finger sequences from the learning phase. There were 6 two-finger sequences for fingers on the left hand and 6 two-finger sequences for fingers on the right hand. For confirmation of a keystroke, a rhombus will appear on the screen. Hence, when the two-finger sequence has been typed, you will see two rhombuses on the screen. As soon as these have disappeared, you can enter the next two-finger sequence. If you cannot remember all the sequences, guess.", " ", "As soon as you click on Start!, you will have 10 seconds to rest your fingers on the markers of the keyboard as before. Then, please enter the two-finger sequences. Please continue to rest your other fingers on the markers when they are not used in a particular two-finger response."];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INSTRECOG( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "A test now follows in which the images of the hands from the learning phase will be shown. As before, two fingers will light up to show a sequence. Please indicate whether or not the two-finger sequence is one that appeared during the learning phase. To indicate this, use the mouse to click on the appropriate box on the screen: old (if the two-finger sequence occurred in the learning phase) or new (if the two-finger sequence did not occur during the learning phase). ";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INSTIMP( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "During the following part of the task, please type each of the letters appearing on the screen as quickly as you can.  Place your fingers as before on the marks and leave them there throughout. Enter each letter using the designated finger for that letter, e.g., the A key with the little finger of your left hand, the S key with the ring finger of your left hand, etc. ";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:COUNT( Message.Text)
    {
      Message()
      {
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:H( Message.Text, Picture.FileName)
    {
      Message()
      {
        LocationY = 0;
        Color = White;
      }
      Picture()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 150;
        LocationY = 260;
        Directory = "./images";
      }
    }
    Trial:H2( Picture.FileName)
    {
      Picture()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 150;
        LocationY = 260;
        Directory = "./images";
      }
    }
    Trial:L1( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L1.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L1.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L2( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L2.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L2.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L3( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L3.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L3.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L4( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L4.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L4.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L5( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L5.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L5.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L6( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L6.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L6.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R1( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R1.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R1.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R2( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R2.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R2.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R3( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R3.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R3.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R4( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R4.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R4.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R5( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R5.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R5.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R6( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R6.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R6.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:RECOG( Picture.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      Picture()
      {
        Directory = "./images";
        LocationY = 260;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["alt", "neu"];
        LocationY = -50;
        Width = 240;
        Height = 60;
      }
    }
    Trial:RECALL( Message:A.Text, Message:B.Text)
    {
      Message:A()
      {
        Color = White;
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
      }
      Message:B()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        Color = White;
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        LocationY = 100;
      }
    }
    Trial:RECALLL( Message:A.Text, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Color = White;
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        LocationY = 100;
      }
      Message:B()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        FontSize = 36;
        ResponseSet = [0, 69, 81, 82, 86, 87];
      }
    }
    Trial:RECALLR( Message:A.Text, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Color = White;
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        LocationY = 100;
      }
      Message:B()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        FontSize = 36;
        ResponseSet = [0, 73, 78, 79, 80, 85];
      }
    }
    Trial:Ta( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tb( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tc( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Td( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Te( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tf( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tu( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tv( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tw( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tx( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Ty( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tz( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:c0( ChoiceResponse.Selection, ResponseTime)
    {
      ChoiceResponse()
      {
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c1( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c2( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c3( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c4( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c5( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c6( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c7( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c8( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c9( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c10( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c11( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c12( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c13( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c14( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c15( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e0( ChoiceResponse.Selection, ResponseTime)
    {
      ChoiceResponse()
      {
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e1( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e2( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e3( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e4( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e5( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e6( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e7( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e8( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e9( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e10( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e11( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e12( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e13( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e14( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e15( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f0( ChoiceResponse.Selection, ResponseTime)
    {
      ChoiceResponse()
      {
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f1( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f2( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f3( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f4( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f5( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f6( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f7( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f8( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f9( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f10( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f11( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f12( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f13( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f14( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f15( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i0( ChoiceResponse.Selection, ResponseTime)
    {
      ChoiceResponse()
      {
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i1( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i2( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i3( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i4( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i5( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i6( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i7( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i8( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i9( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i10( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i11( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i12( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i13( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i14( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i15( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:RATING( Picture:L.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "How do you like this character? (- - - - - = not at all, + + + + + = very much)";
        LocationY = 320;
        FontSize = 24;
        Overlay = de.pxlab.pxl.OverlayCodes.DISPLAY_LIST;
      }
      Picture:L()
      {
        LocationY = 0;
        Directory = "./images";
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["-----", "----", "---", "--", "-", "+", "++", "+++", "++++", "+++++"];
        LocationY = 400;
        LocationX = 0;
        Width = 1200;
        Height = 30;
      }
    }
    Trial:DEMO( Message.Text, TextInput.Text, ResponseTime)
    {
      TextParagraph()
      {
        Text = "Type in your answer, and then please press ENTER.";
        LocationY = -200;
        FontSize = 24;
        Overlay = de.pxlab.pxl.OverlayCodes.DISPLAY_LIST;
      }
      Message()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        FontSize = 32;
      }
      TextInput()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        LocationY = 200;
        FontSize = 32;
        Timer = de.pxlab.pxl.TimerCodes.STOP_KEY_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
      }
    }
    Trial:RL( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "Please indicate whether you are right- or left-handed.";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["right-handed", "left-handed"];
        LocationY = 250;
        Width = 460;
        Height = 60;
      }
    }
    Trial:KL( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "Can you play the piano?";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["yes", "no"];
        LocationY = 250;
        Width = 460;
        Height = 60;
      }
    }
    Trial:TIPP( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "Do you predominantly use the 10-finger system when typing on a keyboard?";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["yes", "no"];
        LocationY = 250;
        Width = 460;
        Height = 60;
      }
    }
    // Session dependent assignments

    AssignmentGroup()
    {
      SubjectCode = 231;
      RemainingSessionGroup = 0;
      RemainingSessionRuns = 0;
      Date = "4/3/14 3:14:59 PM PDT";
      PXLabVersion = "2.1.19";
      PrimaryScreen.ColorDevice = de.pxlab.pxl.ColorDeviceTransformCodes.SONY_TRINITRON;
      PrimaryScreen.ColorDeviceDACRange = 255;
      PrimaryScreen.RedPrimary = [21.26, 0.621, 0.34];
      PrimaryScreen.GreenPrimary = [71.52, 0.281, 0.606];
      PrimaryScreen.BluePrimary = [7.22, 0.152, 0.067];
      PrimaryScreen.RedGamma = [2.4, 1];
      PrimaryScreen.GreenGamma = [2.4, 1];
      PrimaryScreen.BlueGamma = [2.4, 1];
      SecondaryScreen.ColorDevice = de.pxlab.pxl.ColorDeviceTransformCodes.SONY_TRINITRON;
      SecondaryScreen.ColorDeviceDACRange = 255;
      SecondaryScreen.RedPrimary = [21.26, 0.621, 0.34];
      SecondaryScreen.GreenPrimary = [71.52, 0.281, 0.606];
      SecondaryScreen.BluePrimary = [7.22, 0.152, 0.067];
      SecondaryScreen.RedGamma = [2.4, 1];
      SecondaryScreen.GreenGamma = [2.4, 1];
      SecondaryScreen.BlueGamma = [2.4, 1];
      DeviceWhitePoint = [100, 0.3065, 0.3468];
      CIEWhitePoint = 0;
    }
  }
  Factors()
  {
    IndependentFactor( Symbol)
    {
      FactorLevel( 1);
      FactorLevel( 2);
    }
    DependentFactor( ResponseTime);
  }
  Procedure()
  {
    Session()
    {
      Block()
      {
        Trial:INST1( 0, 71248.236);
        Trial:INST2( "Hand.jpg", 0, 8073.059);
        Trial:INST3( 0, 42245.594);
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 6, "z", 2, 19087.238);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 4, "w", 3, 1596.368);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 3, 833.947);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1496.575);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 1286.81);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 8, "b", 2, 3207.447);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 1253.292);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 1494.975);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 1459.919);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 1243.175);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 874.737);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 2065.233);
      }
      Block()
      {
        Trial:INST4( 0, 14420.921);
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 1629.033);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 2302.464);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 1385.955);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 1642.89);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 1198.616);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 2, "c", 1, 1358.067);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 855.925);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 1678.863);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1786.077);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 3, "u", 3, 3018.913);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 2914.478);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 2771.714);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 2319.89);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 1644.133);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 2821.32);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 3, "u", 3, 2072.267);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 8, "v", 2, 6514.132);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 1607.339);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 1128.96);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 2170.955);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 3255.481);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 1935.9);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 1668.259);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 2123.065);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 2492.231);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 3101.096);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 4, "z", 1, 2168.293);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1771.788);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 3, "a", 5, 1526.59);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 1953.108);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 3538.199);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 1660.138);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 1504.271);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 1040.862);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 1838.701);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 4, "v", 1, 2018.64);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 1841.165);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1660.713);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 1527.464);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 3683.042);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 1744.105);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 3657.714);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 1990.114);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 2109.933);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 2362.016);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 2105.768);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 3150.218);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 2515.07);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 2260.401);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 1132.241);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 1404.246);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 1970.675);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 1319.948);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 2040.267);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 1666.578);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 2842.278);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1188.301);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 2, "f", 1, 2457.433);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 2643.171);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 2312.029);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 1860.959);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 1450.453);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 2379.71);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 2575.274);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 8, "a", 2, 1364.048);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 3, "v", 4, 3173.878);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 1834.854);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1306.819);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 2173.839);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 1062.281);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 1438.675);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 2117.068);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 1932.315);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 1409.099);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 3, "u", 3, 1736.447);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 817.464);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 1266.14);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 2289.122);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 1398.958);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 1518.885);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 2042.626);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 3, 1762.763);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1629.038);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 4, "z", 1, 1443.685);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1126.727);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 1672.154);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 3, 3192.588);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 2017.439);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 1785.711);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 3054.277);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 2257.339);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 1506.236);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 1835.165);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 1962.738);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 949.758);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 1417.074);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 1108.247);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 1684.164);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 1609.236);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 1017.723);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 938.953);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 1054.963);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 857.136);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 2, "c", 1, 1484.317);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1554.734);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 1596.107);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 1469.129);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 1177.375);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 1673.596);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 1094.812);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 1478.028);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1721.251);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 1250.696);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 744.072);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 689.5);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 933.691);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 337.882);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 1518.673);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 1629.047);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 1527.29);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 6, "a", 8, 2291.758);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 659.914);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 1469.318);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 2624.767);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 1314.665);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 1955.669);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 2070.577);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 786.768);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1505.825);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 860.104);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 2, 892.745);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 7, "x", 1, 7770.787);
      }
      Block()
      {
        Trial:INSTAB( 0, 15002.933);
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
      }
      Block()
      {
        Trial:Tf( "f", 1, "f", 8, 4973.965);
        Trial:Te( "e", 1, "e", 1, 1546.058);
        Trial:Td( "d", 1, "d", 8, 5636.4);
        Trial:Tf( "f", 1, "f", 8, 1888.703);
        Trial:Te( "e", 1, "e", 1, 1312.054);
        Trial:Td( "d", 6, "d", 8, 4402.026);
        Trial:Tf( "f", 6, "f", 8, 4176.163);
        Trial:Td( "d", 6, "d", 8, 4032.508);
        Trial:Te( "e", 1, "e", 1, 1254.993);
        Trial:Tf( "f", 8, "f", 1, 1695.655);
        Trial:Te( "e", 1, "e", 1, 1255.544);
        Trial:Td( "d", 6, "d", 8, 2543.511);
        Trial:Te( "e", 1, "e", 1, 1047.887);
        Trial:Tf( "f", 8, "f", 1, 2702.529);
        Trial:Td( "d", 6, "d", 8, 1487.143);
        Trial:Tf( "f", 8, "f", 1, 1333.924);
        Trial:Te( "e", 1, "e", 1, 911.094);
        Trial:Td( "d", 6, "d", 8, 1103.527);
        Trial:Tf( "f", 8, "f", 1, 1495.042);
        Trial:Te( "e", 1, "e", 1, 798.527);
        Trial:Td( "d", 6, "d", 8, 2496.541);
        Trial:Tf( "f", 8, "f", 1, 1007.312);
        Trial:Td( "d", 6, "d", 8, 2063.387);
        Trial:Te( "e", 1, "e", 1, 854.124);
        Trial:Tf( "f", 8, "f", 1, 695.323);
        Trial:Te( "e", 1, "e", 1, 1030.824);
        Trial:Td( "d", 6, "d", 8, 4151.56);
        Trial:Te( "e", 1, "e", 1, 1053.067);
        Trial:Tf( "f", 6, "f", 8, 1919.159);
        Trial:Td( "d", 6, "d", 8, 2118.494);
      }
      Block()
      {
        Trial:IBILD( 0, 23780.737);
      }
      Block()
      {
        Trial:e0( 0, 3466.231);
        Trial:e1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_13.jpg", "black.jpg", "black.jpg", "black.jpg"], 0, 5853.806);
        Trial:e2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "black.jpg"], 0, 2408.3);
        Trial:e3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "black.jpg"], 0, 1854.642);
        Trial:e4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "Folie1_16.jpg"], 0, 1222.456);
        Trial:e5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "Folie1_16.jpg"], 0, 1172.328);
        Trial:e6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "Folie1_16.jpg"], 0, 1183.896);
        Trial:e7( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 703.388);
        Trial:e8( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 1081.916);
        Trial:e9( ["black.jpg", "Folie1_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 817.937);
        Trial:e10( ["black.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 849.544);
        Trial:e11( ["black.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 996.116);
        Trial:e12( ["Folie1_1.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 1028.355);
        Trial:e13( ["Folie1_1.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "Folie1_8.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 901.04);
        Trial:e14( ["Folie1_1.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "Folie1_8.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "Folie1_11.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 906.215);
        Trial:e15( ["Folie1_1.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "Folie1_5.jpg", "black.jpg", "Folie1_7.jpg", "Folie1_8.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "Folie1_11.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 432.539);
        Trial:RATING( "Folie1.jpg", 8, 14664.204);
        Trial:c0( 0, 1419.528);
        Trial:c1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_16.jpg"], 0, 601.697);
        Trial:c2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 529.49);
        Trial:c3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 677.729);
        Trial:c4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 561.049);
        Trial:c5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 957.945);
        Trial:c6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 941.493);
        Trial:c7( ["Folie2_1.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 575.163);
        Trial:c8( ["Folie2_1.jpg", "Folie2_2.jpg", "black.jpg", "black.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 525.241);
        Trial:c9( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "black.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 533.847);
        Trial:c10( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 393.264);
        Trial:c11( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 422.099);
        Trial:c12( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "Folie2_12.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 428.793);
        Trial:c13( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "black.jpg", "Folie2_11.jpg", "Folie2_12.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 432.538);
        Trial:c14( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "Folie2_10.jpg", "Folie2_11.jpg", "Folie2_12.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 459.188);
        Trial:c15( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "Folie2_6.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "Folie2_10.jpg", "Folie2_11.jpg", "Folie2_12.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 322.634);
        Trial:RATING( "Folie2.jpg", 4, 5543.7);
        Trial:e0( 0, 1043.691);
        Trial:e1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_13.jpg", "black.jpg", "black.jpg", "black.jpg"], 0, 563.573);
        Trial:e2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "black.jpg"], 0, 923.925);
        Trial:e3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "black.jpg"], 0, 547.752);
        Trial:e4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "Folie3_16.jpg"], 0, 874.798);
        Trial:e5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "Folie3_16.jpg"], 0, 930.729);
        Trial:e6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "Folie3_16.jpg"], 0, 951.009);
        Trial:e7( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 538.11);
        Trial:e8( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 1159.276);
        Trial:e9( ["black.jpg", "Folie3_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 655.541);
        Trial:e10( ["black.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 709.729);
        Trial:e11( ["black.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 937.849);
        Trial:e12( ["Folie3_1.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 910.052);
        Trial:e13( ["Folie3_1.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "Folie3_8.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 573.925);
        Trial:e14( ["Folie3_1.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "Folie3_8.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "Folie3_11.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 871.63);
        Trial:e15( ["Folie3_1.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "Folie3_5.jpg", "black.jpg", "Folie3_7.jpg", "Folie3_8.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "Folie3_11.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 360.826);
        Trial:RATING( "Folie3.jpg", 4, 3233.545);
        Trial:f0( 0, 892.233);
        Trial:f1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 919.947);
        Trial:f2( ["black.jpg", "Folie4_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 868.401);
        Trial:f3( ["black.jpg", "Folie4_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 1073.857);
        Trial:f4( ["black.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 651.948);
        Trial:f5( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 963.529);
        Trial:f6( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 703.045);
        Trial:f7( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 575.097);
        Trial:f8( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 1054.536);
        Trial:f9( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 530.612);
        Trial:f10( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "black.jpg", "black.jpg", "Folie4_7.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 599.723);
        Trial:f11( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 921.719);
        Trial:f12( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "Folie4_8.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 831.654);
        Trial:f13( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "Folie4_8.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "Folie4_14.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 649.446);
        Trial:f14( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "Folie4_8.jpg", "Folie4_9.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "Folie4_14.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 591.578);
        Trial:f15( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "Folie4_8.jpg", "Folie4_9.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "Folie4_13.jpg", "Folie4_14.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 640.26);
        Trial:RATING( "Folie4.jpg", 5, 2966.79);
        Trial:c0( 0, 962.249);
        Trial:c1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_16.jpg"], 0, 505.55);
        Trial:c2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 423.277);
        Trial:c3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 563.583);
        Trial:c4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 487.146);
        Trial:c5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 675.115);
        Trial:c6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 621.259);
        Trial:c7( ["Folie5_1.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 596.701);
        Trial:c8( ["Folie5_1.jpg", "Folie5_2.jpg", "black.jpg", "black.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 527.756);
        Trial:c9( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "black.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 389.706);
        Trial:c10( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 595.694);
        Trial:c11( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 392.55);
        Trial:c12( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "Folie5_12.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 429.48);
        Trial:c13( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "black.jpg", "Folie5_11.jpg", "Folie5_12.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 414.593);
        Trial:c14( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "Folie5_10.jpg", "Folie5_11.jpg", "Folie5_12.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 434.672);
        Trial:c15( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "Folie5_6.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "Folie5_10.jpg", "Folie5_11.jpg", "Folie5_12.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 328.844);
        Trial:RATING( "Folie5.jpg", 8, 2743.683);
        Trial:f0( 0, 833.022);
        Trial:f1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 1008.894);
        Trial:f2( ["black.jpg", "Folie6_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 789.166);
        Trial:f3( ["black.jpg", "Folie6_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 827.182);
        Trial:f4( ["black.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 609.876);
        Trial:f5( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 823.779);
        Trial:f6( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 667.445);
        Trial:f7( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 583.98);
        Trial:f8( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 1136.079);
        Trial:f9( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 558.087);
        Trial:f10( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "black.jpg", "black.jpg", "Folie6_7.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 748.49);
        Trial:f11( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 1000.855);
        Trial:f12( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "Folie6_8.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 977.85);
        Trial:f13( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "Folie6_8.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "Folie6_14.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 939.415);
        Trial:f14( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "Folie6_8.jpg", "Folie6_9.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "Folie6_14.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 624.919);
        Trial:f15( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "Folie6_8.jpg", "Folie6_9.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "Folie6_13.jpg", "Folie6_14.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 575.188);
        Trial:RATING( "Folie6.jpg", 9, 1963.209);
        Trial:i0( 0, 982.36);
        Trial:i1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 588.253);
        Trial:i2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 578.364);
        Trial:i3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 598.771);
        Trial:i4( ["black.jpg", "black.jpg", "black.jpg", "Folie7_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 567.071);
        Trial:i5( ["black.jpg", "black.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 581.601);
        Trial:i6( ["black.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 516.185);
        Trial:i7( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 417.227);
        Trial:i8( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 558.613);
        Trial:i9( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 470.389);
        Trial:i10( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 451.602);
        Trial:i11( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "black.jpg", "Folie7_16.jpg"], 0, 471.925);
        Trial:i12( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "Folie7_15.jpg", "Folie7_16.jpg"], 0, 347.221);
        Trial:i13( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "Folie7_11.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "Folie7_15.jpg", "Folie7_16.jpg"], 0, 567.214);
        Trial:i14( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "Folie7_7.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "Folie7_11.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "Folie7_15.jpg", "Folie7_16.jpg"], 0, 514.032);
        Trial:i15( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "Folie7_6.jpg", "Folie7_7.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "Folie7_11.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "Folie7_15.jpg", "Folie7_16.jpg"], 0, 349.126);
        Trial:RATING( "Folie7.jpg", 3, 3381.612);
        Trial:c0( 0, 767.867);
        Trial:c1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_16.jpg"], 0, 424.687);
        Trial:c2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 408.196);
        Trial:c3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 438.447);
        Trial:c4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 412.449);
        Trial:c5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 588.167);
        Trial:c6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 581.491);
        Trial:c7( ["Folie8_1.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 720.343);
        Trial:c8( ["Folie8_1.jpg", "Folie8_2.jpg", "black.jpg", "black.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 411.069);
        Trial:c9( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "black.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 444.293);
        Trial:c10( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 382.84);
        Trial:c11( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 387.507);
        Trial:c12( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "Folie8_12.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 398.91);
        Trial:c13( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "black.jpg", "Folie8_11.jpg", "Folie8_12.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 354.199);
        Trial:c14( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "Folie8_10.jpg", "Folie8_11.jpg", "Folie8_12.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 456.055);
        Trial:c15( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "Folie8_6.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "Folie8_10.jpg", "Folie8_11.jpg", "Folie8_12.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 337.837);
        Trial:RATING( "Folie8.jpg", 6, 1965.44);
        Trial:e0( 0, 900.005);
        Trial:e1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_13.jpg", "black.jpg", "black.jpg", "black.jpg"], 0, 677.54);
        Trial:e2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "black.jpg"], 0, 694.786);
        Trial:e3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "black.jpg"], 0, 570.798);
        Trial:e4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "Folie9_16.jpg"], 0, 500.067);
        Trial:e5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "Folie9_16.jpg"], 0, 866.415);
        Trial:e6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "Folie9_16.jpg"], 0, 779.507);
        Trial:e7( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 451.549);
        Trial:e8( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 948.24);
        Trial:e9( ["black.jpg", "Folie9_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 635.55);
        Trial:e10( ["black.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 686.576);
        Trial:e11( ["black.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 974.324);
        Trial:e12( ["Folie9_1.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 699.464);
        Trial:e13( ["Folie9_1.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "Folie9_8.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 873.822);
        Trial:e14( ["Folie9_1.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "Folie9_8.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "Folie9_11.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 604.876);
        Trial:e15( ["Folie9_1.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "Folie9_5.jpg", "black.jpg", "Folie9_7.jpg", "Folie9_8.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "Folie9_11.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 391.084);
        Trial:RATING( "Folie9.jpg", 6, 2620.322);
        Trial:c0( 0, 765.183);
        Trial:c1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_16.jpg"], 0, 454.685);
        Trial:c2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 389.619);
        Trial:c3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 411.385);
        Trial:c4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 449.742);
        Trial:c5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 439.737);
        Trial:c6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 544.833);
        Trial:c7( ["Folie10_1.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 475.318);
        Trial:c8( ["Folie10_1.jpg", "Folie10_2.jpg", "black.jpg", "black.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 421.306);
        Trial:c9( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "black.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 409.085);
        Trial:c10( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 330.916);
        Trial:c11( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 335.937);
        Trial:c12( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "Folie10_12.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 486.478);
        Trial:c13( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "black.jpg", "Folie10_11.jpg", "Folie10_12.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 353.4);
        Trial:c14( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "Folie10_10.jpg", "Folie10_11.jpg", "Folie10_12.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 354.956);
        Trial:c15( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "Folie10_6.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "Folie10_10.jpg", "Folie10_11.jpg", "Folie10_12.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 329.187);
        Trial:RATING( "Folie10.jpg", 7, 2151.444);
        Trial:i0( 0, 634.622);
        Trial:i1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 590.862);
        Trial:i2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 396.99);
        Trial:i3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 635.991);
        Trial:i4( ["black.jpg", "black.jpg", "black.jpg", "Folie11_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 578.486);
        Trial:i5( ["black.jpg", "black.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 509.286);
        Trial:i6( ["black.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 415.144);
        Trial:i7( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 330.613);
        Trial:i8( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 330.151);
        Trial:i9( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 433.415);
        Trial:i10( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 409.074);
        Trial:i11( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "black.jpg", "Folie11_16.jpg"], 0, 288.59);
        Trial:i12( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "Folie11_15.jpg", "Folie11_16.jpg"], 0, 323.669);
        Trial:i13( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "Folie11_11.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "Folie11_15.jpg", "Folie11_16.jpg"], 0, 674.13);
        Trial:i14( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "Folie11_7.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "Folie11_11.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "Folie11_15.jpg", "Folie11_16.jpg"], 0, 264.848);
        Trial:i15( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "Folie11_6.jpg", "Folie11_7.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "Folie11_11.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "Folie11_15.jpg", "Folie11_16.jpg"], 0, 317.985);
        Trial:RATING( "Folie11.jpg", 5, 2492.233);
        Trial:f0( 0, 957.559);
        Trial:f1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 961.112);
        Trial:f2( ["black.jpg", "Folie12_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 971.684);
        Trial:f3( ["black.jpg", "Folie12_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 695.61);
        Trial:f4( ["black.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 637.699);
        Trial:f5( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 784.771);
        Trial:f6( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 669.391);
        Trial:f7( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 588.129);
        Trial:f8( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 964.137);
        Trial:f9( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 496.737);
        Trial:f10( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "black.jpg", "black.jpg", "Folie12_7.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 572.692);
        Trial:f11( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 864.751);
        Trial:f12( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "Folie12_8.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 845.149);
        Trial:f13( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "Folie12_8.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "Folie12_14.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 656.215);
        Trial:f14( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "Folie12_8.jpg", "Folie12_9.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "Folie12_14.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 644.892);
        Trial:f15( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "Folie12_8.jpg", "Folie12_9.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "Folie12_13.jpg", "Folie12_14.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 599.687);
        Trial:RATING( "Folie12.jpg", 7, 1982.512);
        Trial:i0( 0, 747.662);
        Trial:i1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 506.76);
        Trial:i2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 414.633);
        Trial:i3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 585.878);
        Trial:i4( ["black.jpg", "black.jpg", "black.jpg", "Folie13_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 423.689);
        Trial:i5( ["black.jpg", "black.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 346.867);
        Trial:i6( ["black.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 304.807);
        Trial:i7( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 312.978);
        Trial:i8( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 298.925);
        Trial:i9( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 336.192);
        Trial:i10( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 307.964);
        Trial:i11( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "black.jpg", "Folie13_16.jpg"], 0, 242.731);
        Trial:i12( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "Folie13_15.jpg", "Folie13_16.jpg"], 0, 368.285);
        Trial:i13( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "Folie13_11.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "Folie13_15.jpg", "Folie13_16.jpg"], 0, 714.07);
        Trial:i14( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "Folie13_7.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "Folie13_11.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "Folie13_15.jpg", "Folie13_16.jpg"], 0, 274.318);
        Trial:i15( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "Folie13_6.jpg", "Folie13_7.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "Folie13_11.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "Folie13_15.jpg", "Folie13_16.jpg"], 0, 409.778);
        Trial:RATING( "Folie13.jpg", 5, 2515.401);
        Trial:f0( 0, 760.167);
        Trial:f1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 905.826);
        Trial:f2( ["black.jpg", "Folie14_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 755.842);
        Trial:f3( ["black.jpg", "Folie14_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 642.335);
        Trial:f4( ["black.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 815.006);
        Trial:f5( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 786.927);
        Trial:f6( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 528.495);
        Trial:f7( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 464.879);
        Trial:f8( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 929.245);
        Trial:f9( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 551.11);
        Trial:f10( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "black.jpg", "black.jpg", "Folie14_7.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 679.766);
        Trial:f11( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 900.298);
        Trial:f12( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "Folie14_8.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 603.23);
        Trial:f13( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "Folie14_8.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "Folie14_14.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 534.218);
        Trial:f14( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "Folie14_8.jpg", "Folie14_9.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "Folie14_14.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 424.297);
        Trial:f15( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "Folie14_8.jpg", "Folie14_9.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "Folie14_13.jpg", "Folie14_14.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 610.823);
        Trial:RATING( "Folie14.jpg", 7, 1826.846);
        Trial:e0( 0, 861.412);
        Trial:e1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_13.jpg", "black.jpg", "black.jpg", "black.jpg"], 0, 441.951);
        Trial:e2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "black.jpg"], 0, 679.331);
        Trial:e3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "black.jpg"], 0, 524.138);
        Trial:e4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "Folie15_16.jpg"], 0, 524.784);
        Trial:e5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "Folie15_16.jpg"], 0, 568.237);
        Trial:e6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "Folie15_16.jpg"], 0, 735.517);
        Trial:e7( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 689.663);
        Trial:e8( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 728.62);
        Trial:e9( ["black.jpg", "Folie15_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 597.102);
        Trial:e10( ["black.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 597.736);
        Trial:e11( ["black.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 784.338);
        Trial:e12( ["Folie15_1.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 683.21);
        Trial:e13( ["Folie15_1.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "Folie15_8.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 577.213);
        Trial:e14( ["Folie15_1.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "Folie15_8.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "Folie15_11.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 614.32);
        Trial:e15( ["Folie15_1.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "Folie15_5.jpg", "black.jpg", "Folie15_7.jpg", "Folie15_8.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "Folie15_11.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 511.552);
        Trial:RATING( "Folie15.jpg", 6, 1764.621);
        Trial:i0( 0, 536.971);
        Trial:i1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 534.745);
        Trial:i2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 440.92);
        Trial:i3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 442.895);
        Trial:i4( ["black.jpg", "black.jpg", "black.jpg", "Folie16_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 341.018);
        Trial:i5( ["black.jpg", "black.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 359.189);
        Trial:i6( ["black.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 368.175);
        Trial:i7( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 392.665);
        Trial:i8( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 313.061);
        Trial:i9( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 338.002);
        Trial:i10( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 436.672);
        Trial:i11( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "black.jpg", "Folie16_16.jpg"], 0, 328.772);
        Trial:i12( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "Folie16_15.jpg", "Folie16_16.jpg"], 0, 406.1);
        Trial:i13( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "Folie16_11.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "Folie16_15.jpg", "Folie16_16.jpg"], 0, 685.209);
        Trial:i14( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "Folie16_7.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "Folie16_11.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "Folie16_15.jpg", "Folie16_16.jpg"], 0, 311.102);
        Trial:i15( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "Folie16_6.jpg", "Folie16_7.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "Folie16_11.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "Folie16_15.jpg", "Folie16_16.jpg"], 0, 242.233);
        Trial:RATING( "Folie16.jpg", 6, 1698.918);
      }
      Block()
      {
        Trial:INSTTEST( 0, 13269.707);
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
      }
      Block()
      {
        Trial:Tu( "u", 1, "u", 1, 2544.822);
        Trial:Ta( "a", 8, "a", 6, 5797.622);
        Trial:Tb( "b", 1, "b", 1, 5907.996);
        Trial:Tv( "v", 3, "v", 5, 4579.408);
        Trial:Tw( "w", 4, "w", 4, 1499.167);
        Trial:Tc( "c", 2, "c", 1, 6180.642);
        Trial:Tx( "x", 1, "x", 4, 4937.206);
        Trial:Td( "d", 6, "d", 8, 4212.717);
        Trial:Ty( "y", 7, "y", 5, 2725.413);
        Trial:Te( "e", 1, "e", 1, 1537.554);
        Trial:Tf( "f", 6, "f", 8, 5013.587);
        Trial:Tz( "z", 3, "z", 1, 4166.657);
      }
      Block()
      {
        Trial:DEMO( "What is your major?", "media studies", 12066.85);
        Trial:DEMO( "How old are you?", 18, 2633.238);
        Trial:RL( 0, 2311.366);
        Trial:KL( 1, 1760.05);
        Trial:TIPP( 1, 2961.42);
        Trial:DEMO( "Did you know any of the Chinese characters?", "no", 5688.708);
      }
    }
  }
}
