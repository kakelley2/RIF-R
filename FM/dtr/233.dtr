Experiment( SubjectCode)
{
  Context()
  {
    AssignmentGroup()
    {
      ExperimentName = "REDMO 25";
      new Symbol = 1;
      DataFileDestination = ".";
      DataFileTrialFormat = "%SubjectCode%";
      SkipBoundingBlockDisplays = 0;
      RandomizeTrials = 0;
      StopKey = de.pxlab.pxl.KeyCodes.ENTER_KEY;
    }
    Session()
    {
      Instruction()
      {
        Text = " ";
      }
    }
    Block();
    Trial:INST1( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["Thank you for your interest in our study! ", " ", "In this task, you will be presented with a series of letters on the screen. For each letter shown, you will need to respond by typing a designated two-finger sequence by using the eight orange markers on the keyboard in front of you. The two-finger sequence will be different for each letter shown. Before you begin, please rest your fingers on the eight orange markers on the keyboard in front of you.", " ", "It is very important that you try to enter each two-finger sequence correctly for each letter presented on the screen. This task tests how well you can learn each two-finger sequence, so it is very important that you pay attention and take this task seriously. After the task, you will be tested on how well you learned and remembered the two-finger sequences for the letters."];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "continue";
        LocationY = 300;
        Width = 200;
        Height = 60;
      }
    }
    Trial:INST2( Picture.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "In the initial learning phase of the experiment, you will be presented with a letter along with an image of a left hand and a right hand (see below). Two fingers on either the left hand or the right hand will quickly light up in order to reveal the two-finger sequenced related to that letter. The first finger to light up in the sequence will be in yellow, and the second finger to light up in the sequence will be in blue. After the two-finger sequence is flashed on the screen, the image of the two hands will disappear. Once the two hands disappear from the screen, you will just see the letter. Now enter the two-finger sequence for that letter previously shown.";
        LocationY = -200;
        FontSize = 24;
      }
      Picture()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Directory = "./images";
        LocationY = 80;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "continue";
        LocationY = 300;
        Width = 200;
        Height = 60;
      }
    }
    Trial:INST3( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["While performing this task, please try to keep your other fingers on their markers on the keyboard when they are not part of the two-finger sequence. It is important that you keep your eyes focused on the center of the screen where the individual letters appear. Please try to perceive the two-finger sequence presented below that letter from the corner of your eye, that is, do not let your eyes wander to the image of the two hands. Look at the letter and remember what the two-finger sequence is for that letter. It is quite difficult to learn the two-finger sequences. Therefore, please try your best to focus in order to do well.", " ", "Six of the twelve two-finger sequences involve two fingers on your left hand. These two-finger sequences are for the letters A, B, C, D, E, and F. The other six two-finger sequences involve your right hand. These two-finger sequences are for the letters U, V, W, X, Y, and Z. The two-finger sequence for any particular letter will always relate to the same hand for which it was originally shown. ", " ", "Once you click on Start!, you will have 10 seconds to rest your fingers on the buttons marked on the keyboard and to focus on the center of the screen. Then, the learning phase will begin."];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INST4( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "This was a first pass with all the letters and corresponding two-finger movements. In the second part of the learning phase, you will be presented with the letters and two-finger sequences just as you were in the first part of the learning phase. Please note that the second part of this phase is longer than the first part. Each letter will be presented on the screen several times during this phase, so you will have the opportunity to learn the correct two-finger sequence for each letter.";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INSTAB( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["The two-finger sequences for these letters shown consist of finger movements on the left hand. When you are presented with each letter, try your hardest to remember the appropriate two-finger sequence you learned for that letter and press those keys.", "When you click on Start!, you will have 10 seconds to rest your fingers back on the buttons marked on the keyboard. Then, the first letter will appear. Please leave your fingers on their markers when they are not part of the two-finger response for a letter shown."];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:IBILD( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "In the following task, you are asked to make an aesthetic evaluation of symbols, that is, an assessment of how attractive you think a symbol is. You will gradually unveil several Chinese characters by clicking on the gray boxes on the screen. A complete Chinese character will be revealed when you have clicked all of boxes. After the Chinese character has been fully uncovered, you will be asked to rate its aesthetic appeal at the bottom of the screen. Minus (-) signs indicate that you find the image unappealing. Plus (+) signs indicate that you find the image appealing. Please click which set of minus or plus signs most correctly matches your aesthetic evaluation.";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "OK";
        LocationY = 300;
        Width = 200;
        Height = 60;
      }
    }
    Trial:INSTTEST( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["A memory test will now take place. You will again be presented with letters from the learning phase. Please remember the corresponding two-finger sequence for that letter and enter it. ", "When you click on Start!, you will have 10 seconds to rest your fingers on the markers on the keyboard as before. Then, the first letter will appear as in the previous task. Please leave your fingers on the markers during the task if they are not required in the two-finger sequence for a particular letter. "];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INSTRECALL( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["In the following test phase, you will be asked to type the two-finger sequences from the learning phase. There were 6 two-finger sequences for fingers on the left hand and 6 two-finger sequences for fingers on the right hand. For confirmation of a keystroke, a rhombus will appear on the screen. Hence, when the two-finger sequence has been typed, you will see two rhombuses on the screen. As soon as these have disappeared, you can enter the next two-finger sequence. If you cannot remember all the sequences, guess.", " ", "As soon as you click on Start!, you will have 10 seconds to rest your fingers on the markers of the keyboard as before. Then, please enter the two-finger sequences. Please continue to rest your other fingers on the markers when they are not used in a particular two-finger response."];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INSTRECOG( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "A test now follows in which the images of the hands from the learning phase will be shown. As before, two fingers will light up to show a sequence. Please indicate whether or not the two-finger sequence is one that appeared during the learning phase. To indicate this, use the mouse to click on the appropriate box on the screen: old (if the two-finger sequence occurred in the learning phase) or new (if the two-finger sequence did not occur during the learning phase). ";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INSTIMP( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "During the following part of the task, please type each of the letters appearing on the screen as quickly as you can.  Place your fingers as before on the marks and leave them there throughout. Enter each letter using the designated finger for that letter, e.g., the A key with the little finger of your left hand, the S key with the ring finger of your left hand, etc. ";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:COUNT( Message.Text)
    {
      Message()
      {
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:H( Message.Text, Picture.FileName)
    {
      Message()
      {
        LocationY = 0;
        Color = White;
      }
      Picture()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 150;
        LocationY = 260;
        Directory = "./images";
      }
    }
    Trial:H2( Picture.FileName)
    {
      Picture()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 150;
        LocationY = 260;
        Directory = "./images";
      }
    }
    Trial:L1( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L1.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L1.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L2( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L2.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L2.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L3( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L3.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L3.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L4( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L4.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L4.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L5( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L5.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L5.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L6( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L6.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L6.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R1( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R1.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R1.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R2( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R2.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R2.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R3( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R3.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R3.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R4( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R4.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R4.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R5( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R5.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R5.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R6( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R6.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R6.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:RECOG( Picture.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      Picture()
      {
        Directory = "./images";
        LocationY = 260;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["alt", "neu"];
        LocationY = -50;
        Width = 240;
        Height = 60;
      }
    }
    Trial:RECALL( Message:A.Text, Message:B.Text)
    {
      Message:A()
      {
        Color = White;
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
      }
      Message:B()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        Color = White;
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        LocationY = 100;
      }
    }
    Trial:RECALLL( Message:A.Text, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Color = White;
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        LocationY = 100;
      }
      Message:B()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        FontSize = 36;
        ResponseSet = [0, 69, 81, 82, 86, 87];
      }
    }
    Trial:RECALLR( Message:A.Text, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Color = White;
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        LocationY = 100;
      }
      Message:B()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        FontSize = 36;
        ResponseSet = [0, 73, 78, 79, 80, 85];
      }
    }
    Trial:Ta( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tb( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tc( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Td( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Te( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tf( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tu( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tv( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tw( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tx( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Ty( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tz( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:c0( ChoiceResponse.Selection, ResponseTime)
    {
      ChoiceResponse()
      {
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c1( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c2( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c3( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c4( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c5( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c6( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c7( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c8( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c9( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c10( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c11( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c12( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c13( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c14( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c15( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e0( ChoiceResponse.Selection, ResponseTime)
    {
      ChoiceResponse()
      {
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e1( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e2( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e3( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e4( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e5( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e6( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e7( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e8( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e9( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e10( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e11( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e12( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e13( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e14( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e15( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f0( ChoiceResponse.Selection, ResponseTime)
    {
      ChoiceResponse()
      {
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f1( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f2( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f3( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f4( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f5( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f6( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f7( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f8( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f9( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f10( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f11( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f12( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f13( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f14( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f15( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i0( ChoiceResponse.Selection, ResponseTime)
    {
      ChoiceResponse()
      {
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i1( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i2( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i3( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i4( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i5( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i6( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i7( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i8( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i9( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i10( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i11( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i12( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i13( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i14( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i15( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:RATING( Picture:L.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "How do you like this character? (- - - - - = not at all, + + + + + = very much)";
        LocationY = 320;
        FontSize = 24;
        Overlay = de.pxlab.pxl.OverlayCodes.DISPLAY_LIST;
      }
      Picture:L()
      {
        LocationY = 0;
        Directory = "./images";
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["-----", "----", "---", "--", "-", "+", "++", "+++", "++++", "+++++"];
        LocationY = 400;
        LocationX = 0;
        Width = 1200;
        Height = 30;
      }
    }
    Trial:DEMO( Message.Text, TextInput.Text, ResponseTime)
    {
      TextParagraph()
      {
        Text = "Type in your answer, and then please press ENTER.";
        LocationY = -200;
        FontSize = 24;
        Overlay = de.pxlab.pxl.OverlayCodes.DISPLAY_LIST;
      }
      Message()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        FontSize = 32;
      }
      TextInput()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        LocationY = 200;
        FontSize = 32;
        Timer = de.pxlab.pxl.TimerCodes.STOP_KEY_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
      }
    }
    Trial:RL( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "Please indicate whether you are right- or left-handed.";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["right-handed", "left-handed"];
        LocationY = 250;
        Width = 460;
        Height = 60;
      }
    }
    Trial:KL( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "Can you play the piano?";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["yes", "no"];
        LocationY = 250;
        Width = 460;
        Height = 60;
      }
    }
    Trial:TIPP( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "Do you predominantly use the 10-finger system when typing on a keyboard?";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["yes", "no"];
        LocationY = 250;
        Width = 460;
        Height = 60;
      }
    }
    // Session dependent assignments

    AssignmentGroup()
    {
      SubjectCode = 233;
      RemainingSessionGroup = 0;
      RemainingSessionRuns = 0;
      Date = "4/4/14 11:05:18 AM PDT";
      PXLabVersion = "2.1.19";
      PrimaryScreen.ColorDevice = de.pxlab.pxl.ColorDeviceTransformCodes.SONY_TRINITRON;
      PrimaryScreen.ColorDeviceDACRange = 255;
      PrimaryScreen.RedPrimary = [21.26, 0.621, 0.34];
      PrimaryScreen.GreenPrimary = [71.52, 0.281, 0.606];
      PrimaryScreen.BluePrimary = [7.22, 0.152, 0.067];
      PrimaryScreen.RedGamma = [2.4, 1];
      PrimaryScreen.GreenGamma = [2.4, 1];
      PrimaryScreen.BlueGamma = [2.4, 1];
      SecondaryScreen.ColorDevice = de.pxlab.pxl.ColorDeviceTransformCodes.SONY_TRINITRON;
      SecondaryScreen.ColorDeviceDACRange = 255;
      SecondaryScreen.RedPrimary = [21.26, 0.621, 0.34];
      SecondaryScreen.GreenPrimary = [71.52, 0.281, 0.606];
      SecondaryScreen.BluePrimary = [7.22, 0.152, 0.067];
      SecondaryScreen.RedGamma = [2.4, 1];
      SecondaryScreen.GreenGamma = [2.4, 1];
      SecondaryScreen.BlueGamma = [2.4, 1];
      DeviceWhitePoint = [100, 0.3065, 0.3468];
      CIEWhitePoint = 0;
    }
  }
  Factors()
  {
    IndependentFactor( Symbol)
    {
      FactorLevel( 1);
      FactorLevel( 2);
    }
    DependentFactor( ResponseTime);
  }
  Procedure()
  {
    Session()
    {
      Block()
      {
        Trial:INST1( 0, 17887.013);
        Trial:INST2( "Hand.jpg", 0, 24717.485);
        Trial:INST3( 0, 40056.28);
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 4831.715);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 1038.995);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 522.503);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 540.087);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 854.377);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 620.519);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 973.909);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 890.811);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 505.566);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 721.069);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 454.654);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 764.594);
      }
      Block()
      {
        Trial:INST4( 0, 14394.939);
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 778.847);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 1108.336);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 1179.405);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 812.774);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 964.925);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 576.001);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 820.643);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 503.052);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 992.249);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 1982.77);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 684.949);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 502.323);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 849.412);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 846.376);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 455.45);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 533.036);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 932.05);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 481.846);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 412.005);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 626.293);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 810.441);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 467.731);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 734.538);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 367.502);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 556.003);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 442.985);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 644.442);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 916.16);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 1077.076);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 923.409);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 313.775);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 528.249);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 561.9);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 980.9);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 320.287);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 764.821);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 521.139);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 537.781);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 705.306);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 420.953);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 353.872);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 713.433);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 739.65);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 262.061);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 436.556);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 519.348);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 196.639);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 318.55);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 599.484);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 344.115);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 321.959);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 510.674);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 588.192);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 464.748);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 684.339);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 867.006);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 416.572);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 360.713);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 407.896);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 506.978);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 464.395);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 320.262);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 689.135);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 535.956);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 494.306);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 893.455);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 622.653);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1012.428);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 911.011);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 341.441);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 596.372);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 1066.461);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 386.024);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 1249.871);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 490.058);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 372.858);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 407.014);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 1221.264);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 633.603);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 575.428);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 397.992);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 944.136);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 710.837);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 680.309);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 772.235);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 852.272);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 861.544);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 581.862);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 433.909);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 365.528);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 642.579);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 594.075);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 369.893);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 367.785);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 543.583);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 1251.387);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 307.983);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 406.402);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 1195.301);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 596.238);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 859.023);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 637.829);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 977.575);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 384.784);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 540.735);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 328.673);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 339.712);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 740.791);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 318.032);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 643.657);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 272.853);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 478.117);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 4, 3428.593);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 659.801);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 592.785);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 486.202);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 610.612);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 385.116);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 856.416);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 345.039);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 463.947);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 413.439);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 362.63);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 366.522);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 398.654);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 471.82);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 279.093);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 4, "w", 4, 203.184);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 486.684);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 566.528);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 480.59);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 324.937);
      }
      Block()
      {
        Trial:INSTAB( 0, 5832.461);
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
      }
      Block()
      {
        Trial:Tb( "b", 1, "b", 2, 5732.745);
        Trial:Tc( "c", 7, "c", 8, 2682.583);
        Trial:Ta( "a", 6, "a", 2, 1361.921);
        Trial:Tb( "b", 1, "b", 2, 1216.402);
        Trial:Tc( "c", 1, "c", 1, 1987.598);
        Trial:Ta( "a", 6, "a", 2, 959.434);
        Trial:Tb( "b", 1, "b", 1, 920.362);
        Trial:Ta( "a", 6, "a", 2, 702.996);
        Trial:Tc( "c", 7, "c", 1, 1027.749);
        Trial:Tb( "b", 2, "b", 1, 1349.761);
        Trial:Tc( "c", 7, "c", 1, 1455.891);
        Trial:Ta( "a", 6, "a", 2, 593.947);
        Trial:Tc( "c", 1, "c", 1, 987.204);
        Trial:Tb( "b", 2, "b", 1, 649.362);
        Trial:Ta( "a", 6, "a", 2, 357.501);
        Trial:Tb( "b", 2, "b", 1, 415.984);
        Trial:Tc( "c", 2, "c", 1, 378.452);
        Trial:Ta( "a", 6, "a", 2, 743.048);
        Trial:Tb( "b", 8, "b", 2, 400.495);
        Trial:Tc( "c", 6, "c", 2, 453.895);
        Trial:Ta( "a", 6, "a", 2, 371.539);
        Trial:Tb( "b", 1, "b", 2, 687.729);
        Trial:Ta( "a", 6, "a", 2, 474.958);
        Trial:Tc( "c", 2, "c", 1, 815.633);
        Trial:Tb( "b", 1, "b", 2, 558.425);
        Trial:Tc( "c", 2, "c", 1, 1110.872);
        Trial:Ta( "a", 6, "a", 2, 709.622);
        Trial:Tc( "c", 2, "c", 1, 1024.952);
        Trial:Tb( "b", 2, "b", 1, 739.206);
        Trial:Ta( "a", 6, "a", 2, 730.291);
      }
      Block()
      {
        Trial:IBILD( 0, 11121.301);
      }
      Block()
      {
        Trial:e0( 0, 14716.786);
        Trial:e1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_13.jpg", "black.jpg", "black.jpg", "black.jpg"], 0, 1589.465);
        Trial:e2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "black.jpg"], 0, 1168.248);
        Trial:e3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "black.jpg"], 0, 859.727);
        Trial:e4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "Folie1_16.jpg"], 0, 791.612);
        Trial:e5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "Folie1_16.jpg"], 0, 731.681);
        Trial:e6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "Folie1_16.jpg"], 0, 984.753);
        Trial:e7( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 560.082);
        Trial:e8( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 869.023);
        Trial:e9( ["black.jpg", "Folie1_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 718.645);
        Trial:e10( ["black.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 589.133);
        Trial:e11( ["black.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 843.713);
        Trial:e12( ["Folie1_1.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 930.904);
        Trial:e13( ["Folie1_1.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "Folie1_8.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 934.375);
        Trial:e14( ["Folie1_1.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "Folie1_8.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "Folie1_11.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 602.128);
        Trial:e15( ["Folie1_1.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "Folie1_5.jpg", "black.jpg", "Folie1_7.jpg", "Folie1_8.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "Folie1_11.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 135.518);
        Trial:RATING( "Folie1.jpg", 8, 4840.828);
        Trial:c0( 0, 1170.493);
        Trial:c1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_16.jpg"], 0, 565.246);
        Trial:c2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 384.235);
        Trial:c3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 577.126);
        Trial:c4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 404.705);
        Trial:c5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 478.264);
        Trial:c6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 775.238);
        Trial:c7( ["Folie2_1.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 781.695);
        Trial:c8( ["Folie2_1.jpg", "Folie2_2.jpg", "black.jpg", "black.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 649.708);
        Trial:c9( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "black.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 367.475);
        Trial:c10( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 422.272);
        Trial:c11( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 558.17);
        Trial:c12( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "Folie2_12.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 422.902);
        Trial:c13( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "black.jpg", "Folie2_11.jpg", "Folie2_12.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 297.5);
        Trial:c14( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "Folie2_10.jpg", "Folie2_11.jpg", "Folie2_12.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 449.609);
        Trial:c15( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "Folie2_6.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "Folie2_10.jpg", "Folie2_11.jpg", "Folie2_12.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 325.146);
        Trial:RATING( "Folie2.jpg", 7, 2312.779);
        Trial:e0( 0, 683.404);
        Trial:e1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_13.jpg", "black.jpg", "black.jpg", "black.jpg"], 0, 442.775);
        Trial:e2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "black.jpg"], 0, 753.883);
        Trial:e3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "black.jpg"], 0, 751.811);
        Trial:e4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "Folie3_16.jpg"], 0, 724.893);
        Trial:e5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "Folie3_16.jpg"], 0, 710.034);
        Trial:e6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "Folie3_16.jpg"], 0, 1057.377);
        Trial:e7( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 653.163);
        Trial:e8( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 666.993);
        Trial:e9( ["black.jpg", "Folie3_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 655.061);
        Trial:e10( ["black.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 537.957);
        Trial:e11( ["black.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 632.828);
        Trial:e12( ["Folie3_1.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 910.098);
        Trial:e13( ["Folie3_1.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "Folie3_8.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 604.539);
        Trial:e14( ["Folie3_1.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "Folie3_8.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "Folie3_11.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 511.777);
        Trial:e15( ["Folie3_1.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "Folie3_5.jpg", "black.jpg", "Folie3_7.jpg", "Folie3_8.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "Folie3_11.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 328.503);
        Trial:RATING( "Folie3.jpg", 7, 1815.299);
        Trial:f0( 0, 761.728);
        Trial:f1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 1150.689);
        Trial:f2( ["black.jpg", "Folie4_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 745.645);
        Trial:f3( ["black.jpg", "Folie4_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 1058.128);
        Trial:f4( ["black.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 800.049);
        Trial:f5( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 869.186);
        Trial:f6( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 717.294);
        Trial:f7( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 552.849);
        Trial:f8( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 760.462);
        Trial:f9( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 630.909);
        Trial:f10( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "black.jpg", "black.jpg", "Folie4_7.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 553.458);
        Trial:f11( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 752.265);
        Trial:f12( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "Folie4_8.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 532.144);
        Trial:f13( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "Folie4_8.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "Folie4_14.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 559.258);
        Trial:f14( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "Folie4_8.jpg", "Folie4_9.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "Folie4_14.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 440.235);
        Trial:f15( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "Folie4_8.jpg", "Folie4_9.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "Folie4_13.jpg", "Folie4_14.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 486.746);
        Trial:RATING( "Folie4.jpg", 5, 2339.776);
        Trial:c0( 0, 680.427);
        Trial:c1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_16.jpg"], 0, 609.888);
        Trial:c2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 448.513);
        Trial:c3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 434.129);
        Trial:c4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 341.801);
        Trial:c5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 404.95);
        Trial:c6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 405.519);
        Trial:c7( ["Folie5_1.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 399.3);
        Trial:c8( ["Folie5_1.jpg", "Folie5_2.jpg", "black.jpg", "black.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 331.177);
        Trial:c9( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "black.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 390.019);
        Trial:c10( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 315.896);
        Trial:c11( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 500.464);
        Trial:c12( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "Folie5_12.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 389.371);
        Trial:c13( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "black.jpg", "Folie5_11.jpg", "Folie5_12.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 260.034);
        Trial:c14( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "Folie5_10.jpg", "Folie5_11.jpg", "Folie5_12.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 246.253);
        Trial:c15( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "Folie5_6.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "Folie5_10.jpg", "Folie5_11.jpg", "Folie5_12.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 149.834);
        Trial:RATING( "Folie5.jpg", 5, 4962.83);
        Trial:f0( 0, 1015.064);
        Trial:f1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 983.397);
        Trial:f2( ["black.jpg", "Folie6_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 745.568);
        Trial:f3( ["black.jpg", "Folie6_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 672.055);
        Trial:f4( ["black.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 561.094);
        Trial:f5( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 639.007);
        Trial:f6( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 590.126);
        Trial:f7( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 502.396);
        Trial:f8( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 526.074);
        Trial:f9( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 387.934);
        Trial:f10( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "black.jpg", "black.jpg", "Folie6_7.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 523.409);
        Trial:f11( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 615.283);
        Trial:f12( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "Folie6_8.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 758.981);
        Trial:f13( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "Folie6_8.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "Folie6_14.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 492.903);
        Trial:f14( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "Folie6_8.jpg", "Folie6_9.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "Folie6_14.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 563.857);
        Trial:f15( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "Folie6_8.jpg", "Folie6_9.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "Folie6_13.jpg", "Folie6_14.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 462.158);
        Trial:RATING( "Folie6.jpg", 6, 1713.095);
        Trial:i0( 0, 870.264);
        Trial:i1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 525.058);
        Trial:i2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 527.976);
        Trial:i3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 527.363);
        Trial:i4( ["black.jpg", "black.jpg", "black.jpg", "Folie7_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 631.3);
        Trial:i5( ["black.jpg", "black.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 1069.402);
        Trial:i6( ["black.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 389.735);
        Trial:i7( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 295.061);
        Trial:i8( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 224.549);
        Trial:i9( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 284.491);
        Trial:i10( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 193.021);
        Trial:i11( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "black.jpg", "Folie7_16.jpg"], 0, 264.142);
        Trial:i12( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "Folie7_15.jpg", "Folie7_16.jpg"], 0, 244.767);
        Trial:i13( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "Folie7_11.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "Folie7_15.jpg", "Folie7_16.jpg"], 0, 185.878);
        Trial:i14( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "Folie7_7.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "Folie7_11.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "Folie7_15.jpg", "Folie7_16.jpg"], 0, 194.326);
        Trial:i15( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "Folie7_6.jpg", "Folie7_7.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "Folie7_11.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "Folie7_15.jpg", "Folie7_16.jpg"], 0, 233.227);
        Trial:RATING( "Folie7.jpg", 3, 2613.678);
        Trial:c0( 0, 843.824);
        Trial:c1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_16.jpg"], 0, 504.725);
        Trial:c2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 424.55);
        Trial:c3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 436.149);
        Trial:c4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 242.497);
        Trial:c5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 360.244);
        Trial:c6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 314.667);
        Trial:c7( ["Folie8_1.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 586.912);
        Trial:c8( ["Folie8_1.jpg", "Folie8_2.jpg", "black.jpg", "black.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 206.813);
        Trial:c9( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "black.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 512.623);
        Trial:c10( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 463.683);
        Trial:c11( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 514.223);
        Trial:c12( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "Folie8_12.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 321.407);
        Trial:c13( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "black.jpg", "Folie8_11.jpg", "Folie8_12.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 426.446);
        Trial:c14( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "Folie8_10.jpg", "Folie8_11.jpg", "Folie8_12.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 431.366);
        Trial:c15( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "Folie8_6.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "Folie8_10.jpg", "Folie8_11.jpg", "Folie8_12.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 421.695);
        Trial:RATING( "Folie8.jpg", 5, 1961.505);
        Trial:e0( 0, 957.461);
        Trial:e1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_13.jpg", "black.jpg", "black.jpg", "black.jpg"], 0, 621.582);
        Trial:e2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "black.jpg"], 0, 525.733);
        Trial:e3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "black.jpg"], 0, 589.271);
        Trial:e4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "Folie9_16.jpg"], 0, 1027.658);
        Trial:e5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "Folie9_16.jpg"], 0, 1097.641);
        Trial:e6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "Folie9_16.jpg"], 0, 696.945);
        Trial:e7( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 648.316);
        Trial:e8( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 655.281);
        Trial:e9( ["black.jpg", "Folie9_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 588.57);
        Trial:e10( ["black.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 531.339);
        Trial:e11( ["black.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 1317.679);
        Trial:e12( ["Folie9_1.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 715.719);
        Trial:e13( ["Folie9_1.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "Folie9_8.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 778.392);
        Trial:e14( ["Folie9_1.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "Folie9_8.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "Folie9_11.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 550.241);
        Trial:e15( ["Folie9_1.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "Folie9_5.jpg", "black.jpg", "Folie9_7.jpg", "Folie9_8.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "Folie9_11.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 329.784);
        Trial:RATING( "Folie9.jpg", 4, 2876.543);
        Trial:c0( 0, 833.707);
        Trial:c1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_16.jpg"], 0, 483.016);
        Trial:c2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 366.96);
        Trial:c3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 372.455);
        Trial:c4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 214.984);
        Trial:c5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 350.306);
        Trial:c6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 315.147);
        Trial:c7( ["Folie10_1.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 249.248);
        Trial:c8( ["Folie10_1.jpg", "Folie10_2.jpg", "black.jpg", "black.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 186.884);
        Trial:c9( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "black.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 205.149);
        Trial:c10( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 229.214);
        Trial:c11( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 207.369);
        Trial:c12( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "Folie10_12.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 209.904);
        Trial:c13( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "black.jpg", "Folie10_11.jpg", "Folie10_12.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 261.89);
        Trial:c14( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "Folie10_10.jpg", "Folie10_11.jpg", "Folie10_12.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 145.694);
        Trial:c15( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "Folie10_6.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "Folie10_10.jpg", "Folie10_11.jpg", "Folie10_12.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 209.236);
        Trial:RATING( "Folie10.jpg", 4, 2459.51);
        Trial:i0( 0, 778.172);
        Trial:i1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 572.895);
        Trial:i2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 1005.068);
        Trial:i3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 589.914);
        Trial:i4( ["black.jpg", "black.jpg", "black.jpg", "Folie11_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 347.917);
        Trial:i5( ["black.jpg", "black.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 252.494);
        Trial:i6( ["black.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 316.82);
        Trial:i7( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 208.546);
        Trial:i8( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 244.537);
        Trial:i9( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 240.31);
        Trial:i10( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 202.621);
        Trial:i11( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "black.jpg", "Folie11_16.jpg"], 0, 231.934);
        Trial:i12( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "Folie11_15.jpg", "Folie11_16.jpg"], 0, 213.192);
        Trial:i13( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "Folie11_11.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "Folie11_15.jpg", "Folie11_16.jpg"], 0, 190.845);
        Trial:i14( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "Folie11_7.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "Folie11_11.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "Folie11_15.jpg", "Folie11_16.jpg"], 0, 188.365);
        Trial:i15( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "Folie11_6.jpg", "Folie11_7.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "Folie11_11.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "Folie11_15.jpg", "Folie11_16.jpg"], 0, 182.098);
        Trial:RATING( "Folie11.jpg", 4, 4858.773);
        Trial:f0( 0, 1038.57);
        Trial:f1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 1117.77);
        Trial:f2( ["black.jpg", "Folie12_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 589.052);
        Trial:f3( ["black.jpg", "Folie12_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 399.356);
        Trial:f4( ["black.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 595.278);
        Trial:f5( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 565.062);
        Trial:f6( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 609.118);
        Trial:f7( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 463.359);
        Trial:f8( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 894.094);
        Trial:f9( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 474.462);
        Trial:f10( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "black.jpg", "black.jpg", "Folie12_7.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 554.654);
        Trial:f11( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 613.769);
        Trial:f12( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "Folie12_8.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 798.015);
        Trial:f13( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "Folie12_8.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "Folie12_14.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 493.84);
        Trial:f14( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "Folie12_8.jpg", "Folie12_9.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "Folie12_14.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 705.653);
        Trial:f15( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "Folie12_8.jpg", "Folie12_9.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "Folie12_13.jpg", "Folie12_14.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 309.106);
        Trial:RATING( "Folie12.jpg", 4, 2794.463);
        Trial:i0( 0, 611.883);
        Trial:i1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 604.091);
        Trial:i2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 835.424);
        Trial:i3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 439.403);
        Trial:i4( ["black.jpg", "black.jpg", "black.jpg", "Folie13_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 303.303);
        Trial:i5( ["black.jpg", "black.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 130.433);
        Trial:i6( ["black.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 167.887);
        Trial:i7( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 135.999);
        Trial:i8( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 159.717);
        Trial:i9( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 138.959);
        Trial:i10( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 426.463);
        Trial:i11( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "black.jpg", "Folie13_16.jpg"], 0, 74.27);
        Trial:i12( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "Folie13_15.jpg", "Folie13_16.jpg"], 0, 438.995);
        Trial:i13( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "Folie13_11.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "Folie13_15.jpg", "Folie13_16.jpg"], 0, 132.982);
        Trial:i14( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "Folie13_7.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "Folie13_11.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "Folie13_15.jpg", "Folie13_16.jpg"], 0, 211.358);
        Trial:i15( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "Folie13_6.jpg", "Folie13_7.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "Folie13_11.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "Folie13_15.jpg", "Folie13_16.jpg"], 0, 213.761);
        Trial:RATING( "Folie13.jpg", 5, 1500.796);
        Trial:f0( 0, 522.026);
        Trial:f1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 901.777);
        Trial:f2( ["black.jpg", "Folie14_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 491.279);
        Trial:f3( ["black.jpg", "Folie14_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 641.112);
        Trial:f4( ["black.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 688.768);
        Trial:f5( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 693.887);
        Trial:f6( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 714.79);
        Trial:f7( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 553.67);
        Trial:f8( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 674.498);
        Trial:f9( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 567.605);
        Trial:f10( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "black.jpg", "black.jpg", "Folie14_7.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 600.721);
        Trial:f11( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 587.487);
        Trial:f12( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "Folie14_8.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 665.531);
        Trial:f13( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "Folie14_8.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "Folie14_14.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 462.84);
        Trial:f14( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "Folie14_8.jpg", "Folie14_9.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "Folie14_14.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 297.461);
        Trial:f15( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "Folie14_8.jpg", "Folie14_9.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "Folie14_13.jpg", "Folie14_14.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 416.774);
        Trial:RATING( "Folie14.jpg", 5, 2057.28);
        Trial:e0( 0, 733.472);
        Trial:e1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_13.jpg", "black.jpg", "black.jpg", "black.jpg"], 0, 585.188);
        Trial:e2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "black.jpg"], 0, 764.521);
        Trial:e3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "black.jpg"], 0, 529.512);
        Trial:e4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "Folie15_16.jpg"], 0, 507.382);
        Trial:e5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "Folie15_16.jpg"], 0, 643.152);
        Trial:e6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "Folie15_16.jpg"], 0, 795.693);
        Trial:e7( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 557.534);
        Trial:e8( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 819.272);
        Trial:e9( ["black.jpg", "Folie15_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 628.044);
        Trial:e10( ["black.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 497.92);
        Trial:e11( ["black.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 753.828);
        Trial:e12( ["Folie15_1.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 826.017);
        Trial:e13( ["Folie15_1.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "Folie15_8.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 764.93);
        Trial:e14( ["Folie15_1.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "Folie15_8.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "Folie15_11.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 670.01);
        Trial:e15( ["Folie15_1.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "Folie15_5.jpg", "black.jpg", "Folie15_7.jpg", "Folie15_8.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "Folie15_11.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 633.272);
        Trial:RATING( "Folie15.jpg", 5, 1457.527);
        Trial:i0( 0, 1111.159);
        Trial:i1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 567.821);
        Trial:i2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 323.69);
        Trial:i3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 255.038);
        Trial:i4( ["black.jpg", "black.jpg", "black.jpg", "Folie16_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 1405.292);
        Trial:i5( ["black.jpg", "black.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 129.849);
        Trial:i6( ["black.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 273.05);
        Trial:i7( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 151.671);
        Trial:i8( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 142.242);
        Trial:i9( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 126.975);
        Trial:i10( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 159.248);
        Trial:i11( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "black.jpg", "Folie16_16.jpg"], 0, 396.133);
        Trial:i12( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "Folie16_15.jpg", "Folie16_16.jpg"], 0, 144.006);
        Trial:i13( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "Folie16_11.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "Folie16_15.jpg", "Folie16_16.jpg"], 0, 135.872);
        Trial:i14( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "Folie16_7.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "Folie16_11.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "Folie16_15.jpg", "Folie16_16.jpg"], 0, 188.035);
        Trial:i15( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "Folie16_6.jpg", "Folie16_7.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "Folie16_11.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "Folie16_15.jpg", "Folie16_16.jpg"], 0, 251.19);
        Trial:RATING( "Folie16.jpg", 5, 1283.205);
      }
      Block()
      {
        Trial:INSTTEST( 0, 5777.316);
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
      }
      Block()
      {
        Trial:Tx( "x", 1, "x", 1, 6265.994);
        Trial:Td( "d", 1, "d", 8, 2542.493);
        Trial:Te( "e", 6, "e", 6, 2721.861);
        Trial:Ty( "y", 7, "y", 5, 1756.428);
        Trial:Tz( "z", 3, "z", 4, 1366.792);
        Trial:Tf( "f", 4, "f", 7, 2487.785);
        Trial:Tu( "u", 2, "u", 5, 1131.671);
        Trial:Ta( "a", 6, "a", 2, 873.945);
        Trial:Tv( "v", 7, "v", 5, 969.83);
        Trial:Tb( "b", 1, "b", 1, 963.384);
        Trial:Tc( "c", 2, "c", 1, 1530.316);
        Trial:Tw( "w", 3, "w", 4, 1040.517);
      }
      Block()
      {
        Trial:DEMO( "What is your major?", "marketing", 3529.094);
        Trial:DEMO( "How old are you?", 21, 1789.723);
        Trial:RL( 0, 2794.87);
        Trial:KL( 1, 2055.09);
        Trial:TIPP( 0, 2079.68);
        Trial:DEMO( "Did you know any of the Chinese characters?", "no", 2261.87);
      }
    }
  }
}
