Experiment( SubjectCode)
{
  Context()
  {
    AssignmentGroup()
    {
      ExperimentName = "REDMO 25";
      new Symbol = 1;
      DataFileDestination = ".";
      DataFileTrialFormat = "%SubjectCode%";
      SkipBoundingBlockDisplays = 0;
      RandomizeTrials = 0;
      StopKey = de.pxlab.pxl.KeyCodes.ENTER_KEY;
    }
    Session()
    {
      Instruction()
      {
        Text = " ";
      }
    }
    Block();
    Trial:INST1( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["Thank you for your interest in our study! ", " ", "In this task, you will be presented with a series of letters on the screen. For each letter shown, you will need to respond by typing a designated two-finger sequence by using the eight orange markers on the keyboard in front of you. The two-finger sequence will be different for each letter shown. Before you begin, please rest your fingers on the eight orange markers on the keyboard in front of you.", " ", "It is very important that you try to enter each two-finger sequence correctly for each letter presented on the screen. This task tests how well you can learn each two-finger sequence, so it is very important that you pay attention and take this task seriously. After the task, you will be tested on how well you learned and remembered the two-finger sequences for the letters."];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "continue";
        LocationY = 300;
        Width = 200;
        Height = 60;
      }
    }
    Trial:INST2( Picture.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "In the initial learning phase of the experiment, you will be presented with a letter along with an image of a left hand and a right hand (see below). Two fingers on either the left hand or the right hand will quickly light up in order to reveal the two-finger sequenced related to that letter. The first finger to light up in the sequence will be in yellow, and the second finger to light up in the sequence will be in blue. After the two-finger sequence is flashed on the screen, the image of the two hands will disappear. Once the two hands disappear from the screen, you will just see the letter. Now enter the two-finger sequence for that letter previously shown.";
        LocationY = -200;
        FontSize = 24;
      }
      Picture()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Directory = "./images";
        LocationY = 80;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "continue";
        LocationY = 300;
        Width = 200;
        Height = 60;
      }
    }
    Trial:INST3( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["While performing this task, please try to keep your other fingers on their markers on the keyboard when they are not part of the two-finger sequence. It is important that you keep your eyes focused on the center of the screen where the individual letters appear. Please try to perceive the two-finger sequence presented below that letter from the corner of your eye, that is, do not let your eyes wander to the image of the two hands. Look at the letter and remember what the two-finger sequence is for that letter. It is quite difficult to learn the two-finger sequences. Therefore, please try your best to focus in order to do well.", " ", "Six of the twelve two-finger sequences involve two fingers on your left hand. These two-finger sequences are for the letters A, B, C, D, E, and F. The other six two-finger sequences involve your right hand. These two-finger sequences are for the letters U, V, W, X, Y, and Z. The two-finger sequence for any particular letter will always relate to the same hand for which it was originally shown. ", " ", "Once you click on Start!, you will have 10 seconds to rest your fingers on the buttons marked on the keyboard and to focus on the center of the screen. Then, the learning phase will begin."];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INST4( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "This was a first pass with all the letters and corresponding two-finger movements. In the second part of the learning phase, you will be presented with the letters and two-finger sequences just as you were in the first part of the learning phase. Please note that the second part of this phase is longer than the first part. Each letter will be presented on the screen several times during this phase, so you will have the opportunity to learn the correct two-finger sequence for each letter.";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INSTAB( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["The two-finger sequences for these letters shown consist of finger movements on the left hand. When you are presented with each letter, try your hardest to remember the appropriate two-finger sequence you learned for that letter and press those keys.", "When you click on Start!, you will have 10 seconds to rest your fingers back on the buttons marked on the keyboard. Then, the first letter will appear. Please leave your fingers on their markers when they are not part of the two-finger response for a letter shown."];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:IBILD( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "In the following task, you are asked to make an aesthetic evaluation of symbols, that is, an assessment of how attractive you think a symbol is. You will gradually unveil several Chinese characters by clicking on the gray boxes on the screen. A complete Chinese character will be revealed when you have clicked all of boxes. After the Chinese character has been fully uncovered, you will be asked to rate its aesthetic appeal at the bottom of the screen. Minus (-) signs indicate that you find the image unappealing. Plus (+) signs indicate that you find the image appealing. Please click which set of minus or plus signs most correctly matches your aesthetic evaluation.";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "OK";
        LocationY = 300;
        Width = 200;
        Height = 60;
      }
    }
    Trial:INSTTEST( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["A memory test will now take place. You will again be presented with letters from the learning phase. Please remember the corresponding two-finger sequence for that letter and enter it. ", "When you click on Start!, you will have 10 seconds to rest your fingers on the markers on the keyboard as before. Then, the first letter will appear as in the previous task. Please leave your fingers on the markers during the task if they are not required in the two-finger sequence for a particular letter. "];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INSTRECALL( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["In the following test phase, you will be asked to type the two-finger sequences from the learning phase. There were 6 two-finger sequences for fingers on the left hand and 6 two-finger sequences for fingers on the right hand. For confirmation of a keystroke, a rhombus will appear on the screen. Hence, when the two-finger sequence has been typed, you will see two rhombuses on the screen. As soon as these have disappeared, you can enter the next two-finger sequence. If you cannot remember all the sequences, guess.", " ", "As soon as you click on Start!, you will have 10 seconds to rest your fingers on the markers of the keyboard as before. Then, please enter the two-finger sequences. Please continue to rest your other fingers on the markers when they are not used in a particular two-finger response."];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INSTRECOG( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "A test now follows in which the images of the hands from the learning phase will be shown. As before, two fingers will light up to show a sequence. Please indicate whether or not the two-finger sequence is one that appeared during the learning phase. To indicate this, use the mouse to click on the appropriate box on the screen: old (if the two-finger sequence occurred in the learning phase) or new (if the two-finger sequence did not occur during the learning phase). ";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INSTIMP( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "During the following part of the task, please type each of the letters appearing on the screen as quickly as you can.  Place your fingers as before on the marks and leave them there throughout. Enter each letter using the designated finger for that letter, e.g., the A key with the little finger of your left hand, the S key with the ring finger of your left hand, etc. ";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:COUNT( Message.Text)
    {
      Message()
      {
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:H( Message.Text, Picture.FileName)
    {
      Message()
      {
        LocationY = 0;
        Color = White;
      }
      Picture()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 150;
        LocationY = 260;
        Directory = "./images";
      }
    }
    Trial:H2( Picture.FileName)
    {
      Picture()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 150;
        LocationY = 260;
        Directory = "./images";
      }
    }
    Trial:L1( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L1.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L1.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L2( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L2.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L2.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L3( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L3.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L3.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L4( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L4.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L4.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L5( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L5.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L5.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L6( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L6.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L6.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R1( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R1.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R1.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R2( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R2.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R2.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R3( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R3.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R3.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R4( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R4.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R4.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R5( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R5.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R5.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R6( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R6.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R6.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:RECOG( Picture.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      Picture()
      {
        Directory = "./images";
        LocationY = 260;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["alt", "neu"];
        LocationY = -50;
        Width = 240;
        Height = 60;
      }
    }
    Trial:RECALL( Message:A.Text, Message:B.Text)
    {
      Message:A()
      {
        Color = White;
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
      }
      Message:B()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        Color = White;
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        LocationY = 100;
      }
    }
    Trial:RECALLL( Message:A.Text, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Color = White;
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        LocationY = 100;
      }
      Message:B()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        FontSize = 36;
        ResponseSet = [0, 69, 81, 82, 86, 87];
      }
    }
    Trial:RECALLR( Message:A.Text, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Color = White;
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        LocationY = 100;
      }
      Message:B()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        FontSize = 36;
        ResponseSet = [0, 73, 78, 79, 80, 85];
      }
    }
    Trial:Ta( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tb( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tc( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Td( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Te( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tf( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tu( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tv( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tw( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tx( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Ty( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tz( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:c0( ChoiceResponse.Selection, ResponseTime)
    {
      ChoiceResponse()
      {
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c1( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c2( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c3( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c4( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c5( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c6( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c7( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c8( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c9( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c10( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c11( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c12( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c13( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c14( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c15( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e0( ChoiceResponse.Selection, ResponseTime)
    {
      ChoiceResponse()
      {
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e1( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e2( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e3( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e4( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e5( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e6( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e7( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e8( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e9( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e10( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e11( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e12( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e13( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e14( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e15( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f0( ChoiceResponse.Selection, ResponseTime)
    {
      ChoiceResponse()
      {
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f1( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f2( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f3( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f4( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f5( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f6( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f7( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f8( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f9( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f10( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f11( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f12( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f13( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f14( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f15( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i0( ChoiceResponse.Selection, ResponseTime)
    {
      ChoiceResponse()
      {
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i1( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i2( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i3( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i4( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i5( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i6( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i7( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i8( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i9( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i10( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i11( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i12( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i13( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i14( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i15( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:RATING( Picture:L.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "How do you like this character? (- - - - - = not at all, + + + + + = very much)";
        LocationY = 320;
        FontSize = 24;
        Overlay = de.pxlab.pxl.OverlayCodes.DISPLAY_LIST;
      }
      Picture:L()
      {
        LocationY = 0;
        Directory = "./images";
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["-----", "----", "---", "--", "-", "+", "++", "+++", "++++", "+++++"];
        LocationY = 400;
        LocationX = 0;
        Width = 1200;
        Height = 30;
      }
    }
    Trial:DEMO( Message.Text, TextInput.Text, ResponseTime)
    {
      TextParagraph()
      {
        Text = "Type in your answer, and then please press ENTER.";
        LocationY = -200;
        FontSize = 24;
        Overlay = de.pxlab.pxl.OverlayCodes.DISPLAY_LIST;
      }
      Message()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        FontSize = 32;
      }
      TextInput()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        LocationY = 200;
        FontSize = 32;
        Timer = de.pxlab.pxl.TimerCodes.STOP_KEY_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
      }
    }
    Trial:RL( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "Please indicate whether you are right- or left-handed.";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["right-handed", "left-handed"];
        LocationY = 250;
        Width = 460;
        Height = 60;
      }
    }
    Trial:KL( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "Can you play the piano?";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["yes", "no"];
        LocationY = 250;
        Width = 460;
        Height = 60;
      }
    }
    Trial:TIPP( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "Do you predominantly use the 10-finger system when typing on a keyboard?";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["yes", "no"];
        LocationY = 250;
        Width = 460;
        Height = 60;
      }
    }
    // Session dependent assignments

    AssignmentGroup()
    {
      SubjectCode = 232;
      RemainingSessionGroup = 0;
      RemainingSessionRuns = 0;
      Date = "4/3/14 4:54:26 PM PDT";
      PXLabVersion = "2.1.19";
      PrimaryScreen.ColorDevice = de.pxlab.pxl.ColorDeviceTransformCodes.SONY_TRINITRON;
      PrimaryScreen.ColorDeviceDACRange = 255;
      PrimaryScreen.RedPrimary = [21.26, 0.621, 0.34];
      PrimaryScreen.GreenPrimary = [71.52, 0.281, 0.606];
      PrimaryScreen.BluePrimary = [7.22, 0.152, 0.067];
      PrimaryScreen.RedGamma = [2.4, 1];
      PrimaryScreen.GreenGamma = [2.4, 1];
      PrimaryScreen.BlueGamma = [2.4, 1];
      SecondaryScreen.ColorDevice = de.pxlab.pxl.ColorDeviceTransformCodes.SONY_TRINITRON;
      SecondaryScreen.ColorDeviceDACRange = 255;
      SecondaryScreen.RedPrimary = [21.26, 0.621, 0.34];
      SecondaryScreen.GreenPrimary = [71.52, 0.281, 0.606];
      SecondaryScreen.BluePrimary = [7.22, 0.152, 0.067];
      SecondaryScreen.RedGamma = [2.4, 1];
      SecondaryScreen.GreenGamma = [2.4, 1];
      SecondaryScreen.BlueGamma = [2.4, 1];
      DeviceWhitePoint = [100, 0.3065, 0.3468];
      CIEWhitePoint = 0;
    }
  }
  Factors()
  {
    IndependentFactor( Symbol)
    {
      FactorLevel( 1);
      FactorLevel( 2);
    }
    DependentFactor( ResponseTime);
  }
  Procedure()
  {
    Session()
    {
      Block()
      {
        Trial:INST1( 0, 168070.933);
        Trial:INST2( "Hand.jpg", 0, 98382.661);
        Trial:INST3( 0, 75101.248);
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 2168.803);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 2097.426);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 1712.861);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1423.866);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 1147.388);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 1522.094);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 8, "a", 1, 1106.404);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 1025.482);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 1040.827);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 4, "v", 1, 1037.905);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 1245.596);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 6, 649.077);
      }
      Block()
      {
        Trial:INST4( 0, 31218.058);
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 1277.395);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 2184.05);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 1867.774);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 1916.393);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 1638.606);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 1883.522);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 2048.355);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 1965.485);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 788.716);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 1340.977);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 1839.829);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 1907.696);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 1602.615);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 2080.002);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 3, "x", 1, 2533.182);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 2244.262);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 2634.173);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 2444.306);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 2134.423);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 6, 3010.474);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 2011.85);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 2766.998);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 2133.439);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 1646.645);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 3098.922);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 1271.89);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 2826.504);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 3096.383);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 2733.413);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 2905.874);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 7, "y", 5, 1466.975);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 1450.976);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 2300.192);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 1558.202);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 2287.472);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 1595.241);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 2261.569);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 2622.081);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 1168.775);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 2862.655);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 1172.542);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 7, "x", 1, 3212.465);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 1018.709);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 1478.886);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 1882.689);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 1297.877);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 883.49);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 6, "e", 1, 3552.283);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 4, 997.047);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 1157.987);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 946.033);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 1985.094);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 1147.787);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 1925.226);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 1205.649);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 3363.019);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1943.617);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 614.305);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 1299.188);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 1867.232);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 985.364);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 1473.84);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 1178.321);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 1027.313);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 1077.439);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 995.796);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 3459.239);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1953.173);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 2455.019);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 1152.718);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 832.329);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 2643.75);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 978.022);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 1762.881);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 461.263);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 576.021);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 1116.934);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 1106.954);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 1984.134);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 1388.785);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 878.495);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 993.001);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1078.325);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 1051.94);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 1043.68);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 1141.389);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 683.388);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 435.957);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 399.08);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 365.352);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 6, 4154.499);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 1049.691);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 4, 1940.983);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 930.882);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 743.866);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 580.62);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 3, 1161.036);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 2666.346);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 1321.535);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 717.17);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 648.282);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 1011.512);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 1921.34);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 216.117);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 836.096);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 1090.404);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 2436.382);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 789.263);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 666.583);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 982.009);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 244.206);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 6, 408.045);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 3, 2252.152);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 2389.177);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 2212.937);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 377.658);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 508.55);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 1756.854);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 1382.251);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 2540.754);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 242.867);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 687.61);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 863.243);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 1466.893);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 2679.836);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 845.54);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 1108.43);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 532.588);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 2335.899);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 1286.207);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 694.889);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 1436.695);
      }
      Block()
      {
        Trial:INSTAB( 0, 12664.451);
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
      }
      Block()
      {
        Trial:Tf( "f", 6, "f", 6, 2410.382);
        Trial:Te( "e", 1, "e", 1, 1833.253);
        Trial:Td( "d", 2, "d", 5, 2112.901);
        Trial:Tf( "f", 6, "f", 6, 1664.601);
        Trial:Te( "e", 1, "e", 1, 1526.992);
        Trial:Td( "d", 1, "d", 1, 5782.433);
        Trial:Tf( "f", 1, "f", 1, 2141.107);
        Trial:Td( "d", 2, "d", 5, 6408.961);
        Trial:Te( "e", 1, "e", 7, 1658.041);
        Trial:Tf( "f", 6, "f", 6, 2466.3);
        Trial:Te( "e", 1, "e", 6, 5162.109);
        Trial:Td( "d", 1, "d", 1, 4934.147);
        Trial:Te( "e", 1, "e", 1, 3930.938);
        Trial:Tf( "f", 6, "f", 6, 3038.162);
        Trial:Td( "d", 2, "d", 5, 5795.112);
        Trial:Tf( "f", 6, "f", 6, 2242.517);
        Trial:Te( "e", 1, "e", 1, 4890.735);
        Trial:Td( "d", 1, "d", 1, 4386.951);
        Trial:Tf( "f", 6, "f", 6, 1104.968);
        Trial:Te( "e", 1, "e", 1, 1706.277);
        Trial:Td( "d", 1, "d", 1, 2081.535);
        Trial:Tf( "f", 6, "f", 6, 1345.628);
        Trial:Td( "d", 1, "d", 1, 4506.815);
        Trial:Te( "e", 1, "e", 1, 2866.276);
        Trial:Tf( "f", 6, "f", 6, 1143.163);
        Trial:Te( "e", 1, "e", 1, 928.86);
        Trial:Td( "d", 1, "d", 1, 986.363);
        Trial:Te( "e", 1, "e", 1, 2537.899);
        Trial:Tf( "f", 6, "f", 6, 737.543);
        Trial:Td( "d", 1, "d", 1, 2905.075);
      }
      Block()
      {
        Trial:IBILD( 0, 40726.049);
      }
      Block()
      {
        Trial:e0( 0, 3993.372);
        Trial:e1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_13.jpg", "black.jpg", "black.jpg", "black.jpg"], 0, 3596.924);
        Trial:e2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "black.jpg"], 0, 2864.917);
        Trial:e3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "black.jpg"], 0, 1460.103);
        Trial:e4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "Folie1_16.jpg"], 0, 851.43);
        Trial:e5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "Folie1_16.jpg"], 0, 1081.149);
        Trial:e6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "Folie1_16.jpg"], 0, 926.405);
        Trial:e7( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 950.757);
        Trial:e8( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 1271.966);
        Trial:e9( ["black.jpg", "Folie1_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 1807.84);
        Trial:e10( ["black.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 989.141);
        Trial:e11( ["black.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 1049.391);
        Trial:e12( ["Folie1_1.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 736.956);
        Trial:e13( ["Folie1_1.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "Folie1_8.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 563.898);
        Trial:e14( ["Folie1_1.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "Folie1_8.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "Folie1_11.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 499.519);
        Trial:e15( ["Folie1_1.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "Folie1_5.jpg", "black.jpg", "Folie1_7.jpg", "Folie1_8.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "Folie1_11.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 372.176);
        Trial:RATING( "Folie1.jpg", 8, 14115.38);
        Trial:c0( 0, 1325.134);
        Trial:c1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_16.jpg"], 0, 629.99);
        Trial:c2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 532.781);
        Trial:c3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 515.033);
        Trial:c4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 593.582);
        Trial:c5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 642.856);
        Trial:c6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 449.98);
        Trial:c7( ["Folie2_1.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 405.952);
        Trial:c8( ["Folie2_1.jpg", "Folie2_2.jpg", "black.jpg", "black.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 554.454);
        Trial:c9( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "black.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 678.768);
        Trial:c10( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 447.266);
        Trial:c11( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 485.462);
        Trial:c12( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "Folie2_12.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 485.224);
        Trial:c13( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "black.jpg", "Folie2_11.jpg", "Folie2_12.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 751.498);
        Trial:c14( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "Folie2_10.jpg", "Folie2_11.jpg", "Folie2_12.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 522.447);
        Trial:c15( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "Folie2_6.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "Folie2_10.jpg", "Folie2_11.jpg", "Folie2_12.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 420.12);
        Trial:RATING( "Folie2.jpg", 5, 9433.358);
        Trial:e0( 0, 1135.946);
        Trial:e1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_13.jpg", "black.jpg", "black.jpg", "black.jpg"], 0, 525.123);
        Trial:e2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "black.jpg"], 0, 540.683);
        Trial:e3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "black.jpg"], 0, 506.28);
        Trial:e4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "Folie3_16.jpg"], 0, 789.764);
        Trial:e5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "Folie3_16.jpg"], 0, 902.348);
        Trial:e6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "Folie3_16.jpg"], 0, 991.788);
        Trial:e7( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 858.221);
        Trial:e8( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 1152.672);
        Trial:e9( ["black.jpg", "Folie3_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 507.223);
        Trial:e10( ["black.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 838.428);
        Trial:e11( ["black.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 782.472);
        Trial:e12( ["Folie3_1.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 736.13);
        Trial:e13( ["Folie3_1.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "Folie3_8.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 575.394);
        Trial:e14( ["Folie3_1.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "Folie3_8.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "Folie3_11.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 672.318);
        Trial:e15( ["Folie3_1.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "Folie3_5.jpg", "black.jpg", "Folie3_7.jpg", "Folie3_8.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "Folie3_11.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 546.656);
        Trial:RATING( "Folie3.jpg", 5, 6401.462);
        Trial:f0( 0, 2889.874);
        Trial:f1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 1104.777);
        Trial:f2( ["black.jpg", "Folie4_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 710.565);
        Trial:f3( ["black.jpg", "Folie4_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 604.71);
        Trial:f4( ["black.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 708.446);
        Trial:f5( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 772.398);
        Trial:f6( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 756.04);
        Trial:f7( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 887.438);
        Trial:f8( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 1120.058);
        Trial:f9( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 573.808);
        Trial:f10( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "black.jpg", "black.jpg", "Folie4_7.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 831.993);
        Trial:f11( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 770.905);
        Trial:f12( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "Folie4_8.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 821.278);
        Trial:f13( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "Folie4_8.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "Folie4_14.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 754.486);
        Trial:f14( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "Folie4_8.jpg", "Folie4_9.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "Folie4_14.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 797.592);
        Trial:f15( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "Folie4_8.jpg", "Folie4_9.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "Folie4_13.jpg", "Folie4_14.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 380.807);
        Trial:RATING( "Folie4.jpg", 5, 4777.67);
        Trial:c0( 0, 937.606);
        Trial:c1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_16.jpg"], 0, 515.341);
        Trial:c2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 578.501);
        Trial:c3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 501.968);
        Trial:c4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 421.585);
        Trial:c5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 586.674);
        Trial:c6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 747.254);
        Trial:c7( ["Folie5_1.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 383.249);
        Trial:c8( ["Folie5_1.jpg", "Folie5_2.jpg", "black.jpg", "black.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 363.417);
        Trial:c9( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "black.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 395.275);
        Trial:c10( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 489.011);
        Trial:c11( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 419.027);
        Trial:c12( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "Folie5_12.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 445.668);
        Trial:c13( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "black.jpg", "Folie5_11.jpg", "Folie5_12.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 1007.852);
        Trial:c14( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "Folie5_10.jpg", "Folie5_11.jpg", "Folie5_12.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 561.049);
        Trial:c15( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "Folie5_6.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "Folie5_10.jpg", "Folie5_11.jpg", "Folie5_12.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 472.738);
        Trial:RATING( "Folie5.jpg", 6, 3073.38);
        Trial:f0( 0, 999.121);
        Trial:f1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 771.952);
        Trial:f2( ["black.jpg", "Folie6_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 1146.122);
        Trial:f3( ["black.jpg", "Folie6_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 989.092);
        Trial:f4( ["black.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 743.689);
        Trial:f5( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 791.489);
        Trial:f6( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 969.984);
        Trial:f7( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 696.408);
        Trial:f8( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 1725.104);
        Trial:f9( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 564.959);
        Trial:f10( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "black.jpg", "black.jpg", "Folie6_7.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 845.708);
        Trial:f11( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 717.324);
        Trial:f12( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "Folie6_8.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 738.384);
        Trial:f13( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "Folie6_8.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "Folie6_14.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 572.411);
        Trial:f14( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "Folie6_8.jpg", "Folie6_9.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "Folie6_14.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 812.627);
        Trial:f15( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "Folie6_8.jpg", "Folie6_9.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "Folie6_13.jpg", "Folie6_14.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 469.52);
        Trial:RATING( "Folie6.jpg", 6, 7537.033);
        Trial:i0( 0, 1058.556);
        Trial:i1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 605.123);
        Trial:i2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 447.852);
        Trial:i3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 513.967);
        Trial:i4( ["black.jpg", "black.jpg", "black.jpg", "Folie7_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 517.817);
        Trial:i5( ["black.jpg", "black.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 498.095);
        Trial:i6( ["black.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 479.997);
        Trial:i7( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 529.707);
        Trial:i8( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 505.468);
        Trial:i9( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 539.828);
        Trial:i10( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 373.898);
        Trial:i11( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "black.jpg", "Folie7_16.jpg"], 0, 381.831);
        Trial:i12( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "Folie7_15.jpg", "Folie7_16.jpg"], 0, 464.47);
        Trial:i13( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "Folie7_11.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "Folie7_15.jpg", "Folie7_16.jpg"], 0, 568.399);
        Trial:i14( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "Folie7_7.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "Folie7_11.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "Folie7_15.jpg", "Folie7_16.jpg"], 0, 461.476);
        Trial:i15( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "Folie7_6.jpg", "Folie7_7.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "Folie7_11.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "Folie7_15.jpg", "Folie7_16.jpg"], 0, 442.554);
        Trial:RATING( "Folie7.jpg", 5, 2019.987);
        Trial:c0( 0, 863.848);
        Trial:c1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_16.jpg"], 0, 495.77);
        Trial:c2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 565.765);
        Trial:c3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 741.208);
        Trial:c4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 635.665);
        Trial:c5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 660.428);
        Trial:c6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 1126.478);
        Trial:c7( ["Folie8_1.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 694.581);
        Trial:c8( ["Folie8_1.jpg", "Folie8_2.jpg", "black.jpg", "black.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 507.02);
        Trial:c9( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "black.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 492.321);
        Trial:c10( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 812.103);
        Trial:c11( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 393.772);
        Trial:c12( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "Folie8_12.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 402.07);
        Trial:c13( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "black.jpg", "Folie8_11.jpg", "Folie8_12.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 403.851);
        Trial:c14( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "Folie8_10.jpg", "Folie8_11.jpg", "Folie8_12.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 383.911);
        Trial:c15( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "Folie8_6.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "Folie8_10.jpg", "Folie8_11.jpg", "Folie8_12.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 299.024);
        Trial:RATING( "Folie8.jpg", 6, 3154.35);
        Trial:e0( 0, 827.026);
        Trial:e1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_13.jpg", "black.jpg", "black.jpg", "black.jpg"], 0, 540.229);
        Trial:e2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "black.jpg"], 0, 971.45);
        Trial:e3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "black.jpg"], 0, 962.951);
        Trial:e4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "Folie9_16.jpg"], 0, 1122.735);
        Trial:e5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "Folie9_16.jpg"], 0, 752.46);
        Trial:e6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "Folie9_16.jpg"], 0, 744.771);
        Trial:e7( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 551.612);
        Trial:e8( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 700.203);
        Trial:e9( ["black.jpg", "Folie9_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 488.717);
        Trial:e10( ["black.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 462.88);
        Trial:e11( ["black.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 675.778);
        Trial:e12( ["Folie9_1.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 796.401);
        Trial:e13( ["Folie9_1.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "Folie9_8.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 614.965);
        Trial:e14( ["Folie9_1.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "Folie9_8.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "Folie9_11.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 745.404);
        Trial:e15( ["Folie9_1.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "Folie9_5.jpg", "black.jpg", "Folie9_7.jpg", "Folie9_8.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "Folie9_11.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 553.899);
        Trial:RATING( "Folie9.jpg", 5, 4616.156);
        Trial:c0( 0, 908.3);
        Trial:c1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_16.jpg"], 0, 585.108);
        Trial:c2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 723.656);
        Trial:c3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 496.333);
        Trial:c4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 705.332);
        Trial:c5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 834.223);
        Trial:c6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 588.769);
        Trial:c7( ["Folie10_1.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 395.524);
        Trial:c8( ["Folie10_1.jpg", "Folie10_2.jpg", "black.jpg", "black.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 465.847);
        Trial:c9( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "black.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 1082.26);
        Trial:c10( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 1167.027);
        Trial:c11( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 429.815);
        Trial:c12( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "Folie10_12.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 774.858);
        Trial:c13( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "black.jpg", "Folie10_11.jpg", "Folie10_12.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 708.286);
        Trial:c14( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "Folie10_10.jpg", "Folie10_11.jpg", "Folie10_12.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 573.833);
        Trial:c15( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "Folie10_6.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "Folie10_10.jpg", "Folie10_11.jpg", "Folie10_12.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 751.001);
        Trial:RATING( "Folie10.jpg", 5, 2374.081);
        Trial:i0( 0, 1032.563);
        Trial:i1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 668.226);
        Trial:i2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 707.701);
        Trial:i3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 762.657);
        Trial:i4( ["black.jpg", "black.jpg", "black.jpg", "Folie11_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 491.26);
        Trial:i5( ["black.jpg", "black.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 512.348);
        Trial:i6( ["black.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 332.765);
        Trial:i7( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 570.038);
        Trial:i8( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 402.459);
        Trial:i9( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 613.004);
        Trial:i10( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 373.756);
        Trial:i11( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "black.jpg", "Folie11_16.jpg"], 0, 797.857);
        Trial:i12( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "Folie11_15.jpg", "Folie11_16.jpg"], 0, 415.346);
        Trial:i13( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "Folie11_11.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "Folie11_15.jpg", "Folie11_16.jpg"], 0, 844.177);
        Trial:i14( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "Folie11_7.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "Folie11_11.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "Folie11_15.jpg", "Folie11_16.jpg"], 0, 624.367);
        Trial:i15( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "Folie11_6.jpg", "Folie11_7.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "Folie11_11.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "Folie11_15.jpg", "Folie11_16.jpg"], 0, 909.406);
        Trial:RATING( "Folie11.jpg", 5, 3022.891);
        Trial:f0( 0, 1207.422);
        Trial:f1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 1020.088);
        Trial:f2( ["black.jpg", "Folie12_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 1005.218);
        Trial:f3( ["black.jpg", "Folie12_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 590.684);
        Trial:f4( ["black.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 792.268);
        Trial:f5( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 865.77);
        Trial:f6( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 576.522);
        Trial:f7( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 513.001);
        Trial:f8( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 572.544);
        Trial:f9( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 686.31);
        Trial:f10( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "black.jpg", "black.jpg", "Folie12_7.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 786.997);
        Trial:f11( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 653.528);
        Trial:f12( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "Folie12_8.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 654.479);
        Trial:f13( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "Folie12_8.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "Folie12_14.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 944.288);
        Trial:f14( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "Folie12_8.jpg", "Folie12_9.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "Folie12_14.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 762.949);
        Trial:f15( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "Folie12_8.jpg", "Folie12_9.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "Folie12_13.jpg", "Folie12_14.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 844.694);
        Trial:RATING( "Folie12.jpg", 5, 2412.329);
        Trial:i0( 0, 829.656);
        Trial:i1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 827.593);
        Trial:i2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 704.002);
        Trial:i3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 511.845);
        Trial:i4( ["black.jpg", "black.jpg", "black.jpg", "Folie13_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 1122.092);
        Trial:i5( ["black.jpg", "black.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 648.505);
        Trial:i6( ["black.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 686.48);
        Trial:i7( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 703.535);
        Trial:i8( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 714.778);
        Trial:i9( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 705.145);
        Trial:i10( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 432.267);
        Trial:i11( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "black.jpg", "Folie13_16.jpg"], 0, 914.682);
        Trial:i12( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "Folie13_15.jpg", "Folie13_16.jpg"], 0, 537.347);
        Trial:i13( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "Folie13_11.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "Folie13_15.jpg", "Folie13_16.jpg"], 0, 616.738);
        Trial:i14( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "Folie13_7.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "Folie13_11.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "Folie13_15.jpg", "Folie13_16.jpg"], 0, 448.821);
        Trial:i15( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "Folie13_6.jpg", "Folie13_7.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "Folie13_11.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "Folie13_15.jpg", "Folie13_16.jpg"], 0, 420.894);
        Trial:RATING( "Folie13.jpg", 6, 3947.791);
        Trial:f0( 0, 896.864);
        Trial:f1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 1099.037);
        Trial:f2( ["black.jpg", "Folie14_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 949.839);
        Trial:f3( ["black.jpg", "Folie14_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 1024.672);
        Trial:f4( ["black.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 749.708);
        Trial:f5( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 727.65);
        Trial:f6( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 1110.039);
        Trial:f7( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 821.851);
        Trial:f8( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 945.736);
        Trial:f9( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 829.175);
        Trial:f10( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "black.jpg", "black.jpg", "Folie14_7.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 674.612);
        Trial:f11( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 729.477);
        Trial:f12( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "Folie14_8.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 912.05);
        Trial:f13( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "Folie14_8.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "Folie14_14.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 852.608);
        Trial:f14( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "Folie14_8.jpg", "Folie14_9.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "Folie14_14.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 883.005);
        Trial:f15( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "Folie14_8.jpg", "Folie14_9.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "Folie14_13.jpg", "Folie14_14.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 409.02);
        Trial:RATING( "Folie14.jpg", 6, 4293.214);
        Trial:e0( 0, 862.771);
        Trial:e1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_13.jpg", "black.jpg", "black.jpg", "black.jpg"], 0, 676.732);
        Trial:e2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "black.jpg"], 0, 676.719);
        Trial:e3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "black.jpg"], 0, 522.167);
        Trial:e4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "Folie15_16.jpg"], 0, 659.101);
        Trial:e5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "Folie15_16.jpg"], 0, 802.527);
        Trial:e6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "Folie15_16.jpg"], 0, 723.384);
        Trial:e7( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 562.533);
        Trial:e8( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 1210.594);
        Trial:e9( ["black.jpg", "Folie15_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 388.571);
        Trial:e10( ["black.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 487.632);
        Trial:e11( ["black.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 721.735);
        Trial:e12( ["Folie15_1.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 871.12);
        Trial:e13( ["Folie15_1.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "Folie15_8.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 457.305);
        Trial:e14( ["Folie15_1.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "Folie15_8.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "Folie15_11.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 670.778);
        Trial:e15( ["Folie15_1.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "Folie15_5.jpg", "black.jpg", "Folie15_7.jpg", "Folie15_8.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "Folie15_11.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 489.488);
        Trial:RATING( "Folie15.jpg", 5, 4737.97);
        Trial:i0( 0, 955.411);
        Trial:i1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 678.078);
        Trial:i2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 651.891);
        Trial:i3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 756.882);
        Trial:i4( ["black.jpg", "black.jpg", "black.jpg", "Folie16_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 519.465);
        Trial:i5( ["black.jpg", "black.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 529.873);
        Trial:i6( ["black.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 708.107);
        Trial:i7( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 573.933);
        Trial:i8( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 692.215);
        Trial:i9( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 520.093);
        Trial:i10( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 427.203);
        Trial:i11( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "black.jpg", "Folie16_16.jpg"], 0, 663.107);
        Trial:i12( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "Folie16_15.jpg", "Folie16_16.jpg"], 0, 494.486);
        Trial:i13( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "Folie16_11.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "Folie16_15.jpg", "Folie16_16.jpg"], 0, 507.313);
        Trial:i14( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "Folie16_7.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "Folie16_11.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "Folie16_15.jpg", "Folie16_16.jpg"], 0, 397.196);
        Trial:i15( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "Folie16_6.jpg", "Folie16_7.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "Folie16_11.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "Folie16_15.jpg", "Folie16_16.jpg"], 0, 454.839);
        Trial:RATING( "Folie16.jpg", 6, 2548.336);
      }
      Block()
      {
        Trial:INSTTEST( 0, 14953.821);
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
      }
      Block()
      {
        Trial:Tu( "u", 1, "u", 1, 4259.587);
        Trial:Ta( "a", 1, "a", 1, 2486.761);
        Trial:Tb( "b", 8, "b", 2, 3019.572);
        Trial:Tv( "v", 7, "v", 4, 3822.412);
        Trial:Tw( "w", 4, "w", 4, 2494.276);
        Trial:Tc( "c", 6, "c", 8, 1443.942);
        Trial:Tx( "x", 3, "x", 3, 6390.362);
        Trial:Td( "d", 8, "d", 5, 4103.066);
        Trial:Ty( "y", 7, "y", 5, 1350.224);
        Trial:Te( "e", 1, "e", 1, 3242.009);
        Trial:Tf( "f", 6, "f", 6, 1975.653);
        Trial:Tz( "z", 1, "z", 1, 4762.836);
      }
      Block()
      {
        Trial:DEMO( "What is your major?", "Kinesiology", 13322.064);
        Trial:DEMO( "How old are you?", 22, 3281.172);
        Trial:RL( 0, 3878.883);
        Trial:KL( 1, 3155.098);
        Trial:TIPP( 0, 12009.285);
        Trial:DEMO( "Did you know any of the Chinese characters?", "No", 4600.554);
      }
    }
  }
}
