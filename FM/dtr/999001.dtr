Experiment( SubjectCode)
{
  Context()
  {
    AssignmentGroup()
    {
      ExperimentName = "REDMO 25";
      new Symbol = 1;
      DataFileDestination = ".";
      DataFileTrialFormat = "%SubjectCode%";
      SkipBoundingBlockDisplays = 0;
      RandomizeTrials = 0;
      StopKey = de.pxlab.pxl.KeyCodes.ENTER_KEY;
    }
    Session()
    {
      Instruction()
      {
        Text = " ";
      }
    }
    Block();
    Trial:INST1( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["Thank you for your interest in our study! ", " ", "In this task, you will be presented with a series of letters on the screen. For each letter shown, you will need to respond by typing a designated two-finger sequence by using the eight orange markers on the keyboard in front of you. The two-finger sequence will be different for each letter shown. Before you begin, please rest your fingers on the eight orange markers on the keyboard in front of you.", " ", "It is very important that you try to enter each two-finger sequence correctly for each letter presented on the screen. This task tests how well you can learn each two-finger sequence, so it is very important that you pay attention and take this task seriously. After the task, you will be tested on how well you learned and remembered the two-finger sequences for the letters."];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "continue";
        LocationY = 300;
        Width = 200;
        Height = 60;
      }
    }
    Trial:INST2( Picture.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "In the initial learning phase of the experiment, you will be presented with a letter along with an image of a left hand and a right hand (see below). Two fingers on either the left hand or the right hand will quickly light up in order to reveal the two-finger sequenced related to that letter. The first finger to light up in the sequence will be in yellow, and the second finger to light up in the sequence will be in blue. After the two-finger sequence is flashed on the screen, the image of the two hands will disappear. Once the two hands disappear from the screen, you will just see the letter. Now enter the two-finger sequence for that letter previously shown.";
        LocationY = -200;
        FontSize = 24;
      }
      Picture()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Directory = "./images";
        LocationY = 80;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "continue";
        LocationY = 300;
        Width = 200;
        Height = 60;
      }
    }
    Trial:INST3( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["While performing this task, please try to keep your other fingers on their markers on the keyboard when they are not part of the two-finger sequence. It is important that you keep your eyes focused on the center of the screen where the individual letters appear. Please try to perceive the two-finger sequence presented below that letter from the corner of your eye, that is, do not let your eyes wander to the image of the two hands. Look at the letter and remember what the two-finger sequence is for that letter. It is quite difficult to learn the two-finger sequences. Therefore, please try your best to focus in order to do well.", " ", "Six of the twelve two-finger sequences involve two fingers on your left hand. These two-finger sequences are for the letters A, B, C, D, E, and F. The other six two-finger sequences involve your right hand. These two-finger sequences are for the letters U, V, W, X, Y, and Z. The two-finger sequence for any particular letter will always relate to the same hand for which it was originally shown. ", " ", "Once you click on Start!, you will have 10 seconds to rest your fingers on the buttons marked on the keyboard and to focus on the center of the screen. Then, the learning phase will begin."];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INST4( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "This was a first pass with all the letters and corresponding two-finger movements. In the second part of the learning phase, you will be presented with the letters and two-finger sequences just as you were in the first part of the learning phase. Please note that the second part of this phase is longer than the first part. Each letter will be presented on the screen several times during this phase, so you will have the opportunity to learn the correct two-finger sequence for each letter.";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INSTAB( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["The two-finger sequences for these letters shown consist of finger movements on the left hand. When you are presented with each letter, try your hardest to remember the appropriate two-finger sequence you learned for that letter and press those keys.", "When you click on Start!, you will have 10 seconds to rest your fingers back on the buttons marked on the keyboard. Then, the first letter will appear. Please leave your fingers on their markers when they are not part of the two-finger response for a letter shown."];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:IBILD( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "In the following task, you are asked to make an aesthetic evaluation of symbols, that is, an assessment of how attractive you think a symbol is. You will gradually unveil several Chinese characters by clicking on the gray boxes on the screen. A complete Chinese character will be revealed when you have clicked all of boxes. After the Chinese character has been fully uncovered, you will be asked to rate its aesthetic appeal at the bottom of the screen. Minus (-) signs indicate that you find the image unappealing. Plus (+) signs indicate that you find the image appealing. Please click which set of minus or plus signs most correctly matches your aesthetic evaluation.";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "OK";
        LocationY = 300;
        Width = 200;
        Height = 60;
      }
    }
    Trial:INSTTEST( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["A memory test will now take place. You will again be presented with letters from the learning phase. Please remember the corresponding two-finger sequence for that letter and enter it. ", "When you click on Start!, you will have 10 seconds to rest your fingers on the markers on the keyboard as before. Then, the first letter will appear as in the previous task. Please leave your fingers on the markers during the task if they are not required in the two-finger sequence for a particular letter. "];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INSTRECALL( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = ["In the following test phase, you will be asked to type the two-finger sequences from the learning phase. There were 6 two-finger sequences for fingers on the left hand and 6 two-finger sequences for fingers on the right hand. For confirmation of a keystroke, a rhombus will appear on the screen. Hence, when the two-finger sequence has been typed, you will see two rhombuses on the screen. As soon as these have disappeared, you can enter the next two-finger sequence. If you cannot remember all the sequences, guess.", " ", "As soon as you click on Start!, you will have 10 seconds to rest your fingers on the markers of the keyboard as before. Then, please enter the two-finger sequences. Please continue to rest your other fingers on the markers when they are not used in a particular two-finger response."];
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INSTRECOG( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "A test now follows in which the images of the hands from the learning phase will be shown. As before, two fingers will light up to show a sequence. Please indicate whether or not the two-finger sequence is one that appeared during the learning phase. To indicate this, use the mouse to click on the appropriate box on the screen: old (if the two-finger sequence occurred in the learning phase) or new (if the two-finger sequence did not occur during the learning phase). ";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:INSTIMP( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "During the following part of the task, please type each of the letters appearing on the screen as quickly as you can.  Place your fingers as before on the marks and leave them there throughout. Enter each letter using the designated finger for that letter, e.g., the A key with the little finger of your left hand, the S key with the ring finger of your left hand, etc. ";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = "start!";
        LocationY = 350;
        Width = 120;
        Height = 60;
      }
    }
    Trial:COUNT( Message.Text)
    {
      Message()
      {
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:H( Message.Text, Picture.FileName)
    {
      Message()
      {
        LocationY = 0;
        Color = White;
      }
      Picture()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 150;
        LocationY = 260;
        Directory = "./images";
      }
    }
    Trial:H2( Picture.FileName)
    {
      Picture()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 150;
        LocationY = 260;
        Directory = "./images";
      }
    }
    Trial:L1( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L1.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L1.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L2( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L2.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L2.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L3( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L3.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L3.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L4( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L4.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L4.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L5( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L5.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L5.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:L6( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:L6.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:L6.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R1( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R1.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R1.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R2( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R2.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R2.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R3( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R3.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R3.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R4( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R4.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R4.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R5( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R5.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R5.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:R6( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 50;
      }
      Feedback:T1()
      {
        ResponseParameter = "Trial:R6.Message:A.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        Visible = 1;
      }
      Feedback:T2()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        ResponseParameter = "Trial:R6.Message:B.ResponseCode";
        CorrectCode = Symbol;
        CorrectText = " ";
        FalseText = "Error!";
        Evaluation = de.pxlab.pxl.EvaluationCodes.COMPARE_CODE;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        Visible = 1;
      }
    }
    Trial:RECOG( Picture.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      Picture()
      {
        Directory = "./images";
        LocationY = 260;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["alt", "neu"];
        LocationY = -50;
        Width = 240;
        Height = 60;
      }
    }
    Trial:RECALL( Message:A.Text, Message:B.Text)
    {
      Message:A()
      {
        Color = White;
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
      }
      Message:B()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        Color = White;
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
        LocationY = 100;
      }
    }
    Trial:RECALLL( Message:A.Text, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Color = White;
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        LocationY = 100;
      }
      Message:B()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        FontSize = 36;
        ResponseSet = [0, 69, 81, 82, 86, 87];
      }
    }
    Trial:RECALLR( Message:A.Text, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Color = White;
        FontSize = 36;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        LocationY = 100;
      }
      Message:B()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        FontSize = 36;
        ResponseSet = [0, 73, 78, 79, 80, 85];
      }
    }
    Trial:Ta( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tb( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tc( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Td( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Te( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 69, 73, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 87, 69, 73, 79, 80, 81, 82, 85];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tf( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 82, 69, 73, 79, 80, 81, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 81, 69, 73, 79, 80, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tu( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tv( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tw( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tx( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Ty( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 80, 69, 73, 79, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 85, 69, 73, 79, 80, 81, 82, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:Tz( Message:A.Text, Message:A.ResponseCode, Message:B.Text, Message:B.ResponseCode, ResponseTime)
    {
      Message:A()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 79, 69, 73, 80, 81, 82, 85, 87];
      }
      Message:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.LIMITED_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Duration = 1000000;
        Color = White;
        ResponseSet = [0, 73, 69, 79, 80, 81, 82, 85, 87];
      }
      ClearScreen:B()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:c0( ChoiceResponse.Selection, ResponseTime)
    {
      ChoiceResponse()
      {
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c1( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c2( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c3( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c4( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c5( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c6( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c7( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c8( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c9( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c10( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c11( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c12( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c13( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c14( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:c15( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e0( ChoiceResponse.Selection, ResponseTime)
    {
      ChoiceResponse()
      {
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e1( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e2( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e3( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e4( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e5( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e6( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e7( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e8( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e9( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e10( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e11( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e12( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e13( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e14( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:e15( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f0( ChoiceResponse.Selection, ResponseTime)
    {
      ChoiceResponse()
      {
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f1( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f2( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f3( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f4( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f5( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f6( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f7( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f8( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f9( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f10( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f11( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f12( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f13( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f14( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:f15( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i0( ChoiceResponse.Selection, ResponseTime)
    {
      ChoiceResponse()
      {
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i1( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i2( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i3( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i4( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i5( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i6( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i7( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i8( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i9( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -150;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i10( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i11( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 150;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i12( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i13( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = 50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i14( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = -50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:i15( PictureMatrix.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      PictureMatrix()
      {
        Directory = "./images";
        LocationX = 0;
        LocationY = 0;
        ReferencePoint = MIDDLE_CENTER;
        VerticalGap = 0;
        HorizontalGap = 0;
        NumberOfColumns = 4;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = " ";
        LocationY = 50;
        LocationX = -50;
        Width = 100;
        Height = 100;
      }
    }
    Trial:RATING( Picture:L.FileName, ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "How do you like this character? (- - - - - = not at all, + + + + + = very much)";
        LocationY = 320;
        FontSize = 24;
        Overlay = de.pxlab.pxl.OverlayCodes.DISPLAY_LIST;
      }
      Picture:L()
      {
        LocationY = 0;
        Directory = "./images";
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["-----", "----", "---", "--", "-", "+", "++", "+++", "++++", "+++++"];
        LocationY = 400;
        LocationX = 0;
        Width = 1200;
        Height = 30;
      }
    }
    Trial:DEMO( Message.Text, TextInput.Text, ResponseTime)
    {
      TextParagraph()
      {
        Text = "Type in your answer, and then please press ENTER.";
        LocationY = -200;
        FontSize = 24;
        Overlay = de.pxlab.pxl.OverlayCodes.DISPLAY_LIST;
      }
      Message()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 0;
        FontSize = 32;
      }
      TextInput()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        LocationY = 200;
        FontSize = 32;
        Timer = de.pxlab.pxl.TimerCodes.STOP_KEY_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
      }
    }
    Trial:RL( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "Please indicate whether you are right- or left-handed.";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["right-handed", "left-handed"];
        LocationY = 250;
        Width = 460;
        Height = 60;
      }
    }
    Trial:KL( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "Can you play the piano?";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["yes", "no"];
        LocationY = 250;
        Width = 460;
        Height = 60;
      }
    }
    Trial:TIPP( ChoiceResponse.Selection, ResponseTime)
    {
      TextParagraph()
      {
        Text = "Do you predominantly use the 10-finger system when typing on a keyboard?";
        LocationY = -50;
        FontSize = 24;
      }
      ChoiceResponse()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Timer = de.pxlab.pxl.TimerCodes.MOUSE_TRACKING_TIMER|de.pxlab.pxl.TimerCodes.START_RESPONSE_TIMER|de.pxlab.pxl.TimerCodes.STOP_RESPONSE_TIMER;
        Choices = ["yes", "no"];
        LocationY = 250;
        Width = 460;
        Height = 60;
      }
    }
    // Session dependent assignments

    AssignmentGroup()
    {
      SubjectCode = 999;
      RemainingSessionGroup = 0;
      RemainingSessionRuns = 0;
      Date = "3/26/14 12:26:46 PM PDT";
      PXLabVersion = "2.1.19";
      PrimaryScreen.ColorDevice = de.pxlab.pxl.ColorDeviceTransformCodes.SONY_TRINITRON;
      PrimaryScreen.ColorDeviceDACRange = 255;
      PrimaryScreen.RedPrimary = [21.26, 0.621, 0.34];
      PrimaryScreen.GreenPrimary = [71.52, 0.281, 0.606];
      PrimaryScreen.BluePrimary = [7.22, 0.152, 0.067];
      PrimaryScreen.RedGamma = [2.4, 1];
      PrimaryScreen.GreenGamma = [2.4, 1];
      PrimaryScreen.BlueGamma = [2.4, 1];
      SecondaryScreen.ColorDevice = de.pxlab.pxl.ColorDeviceTransformCodes.SONY_TRINITRON;
      SecondaryScreen.ColorDeviceDACRange = 255;
      SecondaryScreen.RedPrimary = [21.26, 0.621, 0.34];
      SecondaryScreen.GreenPrimary = [71.52, 0.281, 0.606];
      SecondaryScreen.BluePrimary = [7.22, 0.152, 0.067];
      SecondaryScreen.RedGamma = [2.4, 1];
      SecondaryScreen.GreenGamma = [2.4, 1];
      SecondaryScreen.BlueGamma = [2.4, 1];
      DeviceWhitePoint = [100, 0.3065, 0.3468];
      CIEWhitePoint = 0;
    }
  }
  Factors()
  {
    IndependentFactor( Symbol)
    {
      FactorLevel( 1);
      FactorLevel( 2);
    }
    DependentFactor( ResponseTime);
  }
  Procedure()
  {
    Session()
    {
      Block()
      {
        Trial:INST1( 0, 20239.094);
        Trial:INST2( "Hand.jpg", 0, 505.728);
        Trial:INST3( 0, 623.583);
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 4, "z", 1, 29211.506);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 5730.242);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 3866.51);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 3384.884);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 4, 6108.138);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 8494.898);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 6376.375);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 6207.785);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 12340.117);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 3260.127);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 6411.419);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 6, "e", 2, 4989.982);
      }
      Block()
      {
        Trial:INST4( 0, 1945.405);
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 1, "v", 1, 10223.497);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 1, 3949.646);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 2931.556);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 3162.404);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 1, 3824.618);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 1, "c", 1, 3423.952);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 1652.674);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 8, "e", 6, 3089.856);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 2943.968);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 7859.603);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 1, 2622.348);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 1, 4085.282);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 10019.543);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 1, 3867.878);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 7, "x", 3, 3062.346);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 3, "u", 1, 10429.031);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 3, "v", 3, 325.385);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 7, "b", 8, 521.71);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 8, "c", 7, 3534.278);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 4, "d", 3, 335.406);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 5, 704.791);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 3, 745.684);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 3, "a", 4, 569.735);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 5, "f", 5, 514.414);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 4, "x", 1, 275.196);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 5, "c", 5, 404.644);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 3, 294.548);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 4, "d", 3, 421.435);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 3, "a", 4, 220.578);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 4, "w", 1, 1276.009);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 4, "y", 4, 393.258);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 3, "u", 3, 239.984);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 3, "b", 4, 215.426);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 2, "e", 5, 258.294);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 5, "f", 3, 284.362);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 3, "v", 5, 329.953);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 1, "w", 3, 284.768);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 3, "d", 4, 142.427);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 5, "u", 7, 317.914);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 7, "b", 5, 303.263);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 4, "z", 7, 183.334);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 6, "x", 4, 210.514);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 6, "y", 7, 647.879);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 7, "c", 5, 6292.613);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 5, "f", 5, 345.405);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 8, "a", 1, 163.326);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 6, "v", 3, 326.883);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 4, 261.381);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 8, "x", 8, 4119.138);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 8, "u", 3, 209.358);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 2, "c", 4, 270.873);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 3, "b", 2, 1038.596);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 8, "e", 4, 770.865);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 4, "w", 1, 3149.657);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 1, "y", 5, 455.942);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 1, "z", 3, 402.185);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 3, "d", 4, 174.189);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 5, "f", 5, 402.689);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 8, "v", 6, 1964.39);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 8, "a", 4, 59.032);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 5, "y", 2, 805.99);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 2, "f", 8, 373.22);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 8, "x", 1, 360.503);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 5, "z", 4, 136.027);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 2, "a", 2, 131.382);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 8, "v", 5, 2896.3);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 6, "b", 2, 241.498);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 3570.235);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 2, "u", 6, 158.867);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 2468.111);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 7, "c", 6, 256.953);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 6, "w", 6, 325.631);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 1, "f", 1, 1061.972);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 1, "a", 1, 279.199);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 1, 1002.001);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 819.334);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 1, "b", 7, 1061.177);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 2, "v", 2, 700.685);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 2, "w", 2, 326.399);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 2, "x", 2, 142.887);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 2, "c", 2, 799.906);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 2, "y", 2, 459.215);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 1, "d", 1, 878.586);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 2, "z", 2, 227.474);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 2, "d", 1, 309.544);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 2, "b", 2, 389.577);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 2, "v", 2, 2378.176);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 2, "c", 2, 394.426);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 2, "w", 2, 342.446);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 2, "f", 2, 412.752);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 1, "e", 1, 1361.034);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 2, "u", 2, 535.029);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 5, "x", 8, 64145.418);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 7, "z", 7, 799.45);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 7, "a", 7, 570.235);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 7, "y", 1, 380.203);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 1, "u", 7, 439.068);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 7, "x", 7, 684.455);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 7, "v", 1, 16499.021);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 7, "w", 7, 339.453);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 7, "a", 7, 289.82);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 7, "z", 7, 341.217);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 7, "b", 8, 346.813);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 8, "c", 7, 343.804);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 7, "d", 7, 13174.83);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 7, "f", 7, 339.805);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 7, "e", 8, 361.447);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 7, "y", 1, 453.185);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 7, "f", 7, 293.181);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 3, "z", 1, 1420.386);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 8, "c", 7, 1227.794);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 7, "d", 7, 456.05);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 7, "w", 7, 461.351);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 3, "y", 3, 27675.319);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 3, "u", 1, 494.926);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 2, "a", 3, 339.036);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 2, "e", 3, 24352.939);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 3, "b", 3, 259.556);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 3, "v", 3, 396.998);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 1, "x", 3, 246.082);
      }
      Block()
      {
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "Hand.jpg");
        Trial:H( "a", "links_Mitte.jpg");
        Trial:H( "a", "links_Zeige2.jpg");
        Trial:L1( "a", 2, "a", 3, 343.752);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "Hand.jpg");
        Trial:H( "u", "rechts_Zeige.jpg");
        Trial:H( "u", "rechts_Mitte2.jpg");
        Trial:R1( "u", 3, "u", 1, 342.923);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "Hand.jpg");
        Trial:H( "f", "links_Zeige.jpg");
        Trial:H( "f", "links_klein2.jpg");
        Trial:L6( "f", 7, "f", 7, 10896.318);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "Hand.jpg");
        Trial:H( "v", "rechts_Ring.jpg");
        Trial:H( "v", "rechts_Zeige2.jpg");
        Trial:R2( "v", 7, "v", 1, 564.743);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "Hand.jpg");
        Trial:H( "z", "rechts_Ring.jpg");
        Trial:H( "z", "rechts_Mitte2.jpg");
        Trial:R6( "z", 7, "z", 7, 486.889);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "Hand.jpg");
        Trial:H( "c", "links_Ring.jpg");
        Trial:H( "c", "links_klein2.jpg");
        Trial:L3( "c", 8, "c", 7, 1920.21);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "Hand.jpg");
        Trial:H( "y", "rechts_klein.jpg");
        Trial:H( "y", "rechts_Zeige2.jpg");
        Trial:R5( "y", 7, "y", 1, 226.833);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "Hand.jpg");
        Trial:H( "w", "rechts_klein.jpg");
        Trial:H( "w", "rechts_Ring2.jpg");
        Trial:R3( "w", 7, "w", 7, 391.174);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "Hand.jpg");
        Trial:H( "d", "links_klein.jpg");
        Trial:H( "d", "links_Mitte2.jpg");
        Trial:L4( "d", 7, "d", 7, 463.705);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "Hand.jpg");
        Trial:H( "e", "links_Mitte.jpg");
        Trial:H( "e", "links_Ring2.jpg");
        Trial:L5( "e", 7, "e", 8, 320.081);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "Hand.jpg");
        Trial:H( "b", "links_Zeige.jpg");
        Trial:H( "b", "links_Ring2.jpg");
        Trial:L2( "b", 7, "b", 8, 359.746);
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "Hand.jpg");
        Trial:H( "x", "rechts_Mitte.jpg");
        Trial:H( "x", "rechts_klein2.jpg");
        Trial:R4( "x", 7, "x", 7, 355.688);
      }
      Block()
      {
        Trial:INSTAB( 0, 710267.554);
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
      }
      Block()
      {
        Trial:Tf( "f", 1, "f", 1, 3694.376);
        Trial:Te( "e", 1, "e", 1, 4638.533);
        Trial:Td( "d", 1, "d", 1, 2739.216);
        Trial:Tf( "f", 1, "f", 1, 1996.946);
        Trial:Te( "e", 1, "e", 1, 924.959);
        Trial:Td( "d", 1, "d", 1, 2364.617);
        Trial:Tf( "f", 1, "f", 1, 3212.801);
        Trial:Td( "d", 1, "d", 1, 3032.488);
        Trial:Te( "e", 1, "e", 1, 901.331);
        Trial:Tf( "f", 1, "f", 1, 5292.474);
        Trial:Te( "e", 1, "e", 1, 3199.709);
        Trial:Td( "d", 1, "d", 1, 8438.024);
        Trial:Te( "e", 1, "e", 1, 1365.449);
        Trial:Tf( "f", 1, "f", 1, 1780.45);
        Trial:Td( "d", 1, "d", 1, 2724.908);
        Trial:Tf( "f", 1, "f", 1, 1872.094);
        Trial:Te( "e", 1, "e", 1, 804.503);
        Trial:Td( "d", 1, "d", 1, 1531.003);
        Trial:Tf( "f", 1, "f", 1, 1604.154);
        Trial:Te( "e", 1, "e", 1, 796.454);
        Trial:Td( "d", 1, "d", 1, 1109.193);
        Trial:Tf( "f", 1, "f", 1, 1484.359);
        Trial:Td( "d", 1, "d", 1, 1877.187);
        Trial:Te( "e", 1, "e", 1, 756.207);
        Trial:Tf( "f", 1, "f", 1, 1436.599);
        Trial:Te( "e", 1, "e", 1, 1579.709);
        Trial:Td( "d", 1, "d", 1, 1188.46);
        Trial:Te( "e", 1, "e", 1, 908.596);
        Trial:Tf( "f", 1, "f", 1, 1218.784);
        Trial:Td( "d", 1, "d", 1, 1188.981);
      }
      Block()
      {
        Trial:IBILD( 0, 2538.616);
      }
      Block()
      {
        Trial:e0( 0, 2060.552);
        Trial:e1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_13.jpg", "black.jpg", "black.jpg", "black.jpg"], 0, 682.646);
        Trial:e2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "black.jpg"], 0, 873.798);
        Trial:e3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "black.jpg"], 0, 1913.361);
        Trial:e4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "Folie1_16.jpg"], 0, 1008.391);
        Trial:e5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "Folie1_16.jpg"], 0, 521.516);
        Trial:e6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "black.jpg", "Folie1_16.jpg"], 0, 673.995);
        Trial:e7( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "black.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 606.225);
        Trial:e8( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 546.106);
        Trial:e9( ["black.jpg", "Folie1_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 434.971);
        Trial:e10( ["black.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 426.202);
        Trial:e11( ["black.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 671.582);
        Trial:e12( ["Folie1_1.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "black.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 557.063);
        Trial:e13( ["Folie1_1.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "Folie1_8.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "black.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 337.767);
        Trial:e14( ["Folie1_1.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "black.jpg", "black.jpg", "Folie1_7.jpg", "Folie1_8.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "Folie1_11.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 369.695);
        Trial:e15( ["Folie1_1.jpg", "Folie1_2.jpg", "Folie1_3.jpg", "Folie1_4.jpg", "Folie1_5.jpg", "black.jpg", "Folie1_7.jpg", "Folie1_8.jpg", "Folie1_9.jpg", "Folie1_10.jpg", "Folie1_11.jpg", "Folie1_12.jpg", "Folie1_13.jpg", "Folie1_14.jpg", "Folie1_15.jpg", "Folie1_16.jpg"], 0, 141.528);
        Trial:RATING( "Folie1.jpg", 5, 6055.421);
        Trial:c0( 0, 639347.18);
        Trial:c1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_16.jpg"], 0, 672.725);
        Trial:c2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 3966.612);
        Trial:c3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 467.364);
        Trial:c4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 2868.928);
        Trial:c5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 507.526);
        Trial:c6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 340.86);
        Trial:c7( ["Folie2_1.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 303.801);
        Trial:c8( ["Folie2_1.jpg", "Folie2_2.jpg", "black.jpg", "black.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 146.91);
        Trial:c9( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "black.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 100.328);
        Trial:c10( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 457.31);
        Trial:c11( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 137.136);
        Trial:c12( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "black.jpg", "black.jpg", "Folie2_12.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 807.561);
        Trial:c13( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "black.jpg", "Folie2_11.jpg", "Folie2_12.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 191.02);
        Trial:c14( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "black.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "Folie2_10.jpg", "Folie2_11.jpg", "Folie2_12.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 248.317);
        Trial:c15( ["Folie2_1.jpg", "Folie2_2.jpg", "Folie2_3.jpg", "Folie2_4.jpg", "Folie2_5.jpg", "Folie2_6.jpg", "black.jpg", "Folie2_8.jpg", "Folie2_9.jpg", "Folie2_10.jpg", "Folie2_11.jpg", "Folie2_12.jpg", "Folie2_13.jpg", "Folie2_14.jpg", "Folie2_15.jpg", "Folie2_16.jpg"], 0, 199.945);
        Trial:RATING( "Folie2.jpg", 6, 1144.636);
        Trial:e0( 0, 721.564);
        Trial:e1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_13.jpg", "black.jpg", "black.jpg", "black.jpg"], 0, 397.943);
        Trial:e2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "black.jpg"], 0, 503.95);
        Trial:e3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "black.jpg"], 0, 569.177);
        Trial:e4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "Folie3_16.jpg"], 0, 565.6);
        Trial:e5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "Folie3_16.jpg"], 0, 635.121);
        Trial:e6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "black.jpg", "Folie3_16.jpg"], 0, 916.588);
        Trial:e7( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "black.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 524.246);
        Trial:e8( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 789.762);
        Trial:e9( ["black.jpg", "Folie3_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 8050.47);
        Trial:e10( ["black.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 607.146);
        Trial:e11( ["black.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 606.505);
        Trial:e12( ["Folie3_1.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "black.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 562.289);
        Trial:e13( ["Folie3_1.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "Folie3_8.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "black.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 317.174);
        Trial:e14( ["Folie3_1.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "black.jpg", "black.jpg", "Folie3_7.jpg", "Folie3_8.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "Folie3_11.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 343.182);
        Trial:e15( ["Folie3_1.jpg", "Folie3_2.jpg", "Folie3_3.jpg", "Folie3_4.jpg", "Folie3_5.jpg", "black.jpg", "Folie3_7.jpg", "Folie3_8.jpg", "Folie3_9.jpg", "Folie3_10.jpg", "Folie3_11.jpg", "Folie3_12.jpg", "Folie3_13.jpg", "Folie3_14.jpg", "Folie3_15.jpg", "Folie3_16.jpg"], 0, 47.653);
        Trial:RATING( "Folie3.jpg", 7, 1834.807);
        Trial:f0( 0, 613.51);
        Trial:f1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 654.496);
        Trial:f2( ["black.jpg", "Folie4_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 638.848);
        Trial:f3( ["black.jpg", "Folie4_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 561.682);
        Trial:f4( ["black.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 772.22);
        Trial:f5( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 573.325);
        Trial:f6( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_16.jpg"], 0, 506.087);
        Trial:f7( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "black.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 524.323);
        Trial:f8( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 635.853);
        Trial:f9( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 503.487);
        Trial:f10( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "black.jpg", "black.jpg", "Folie4_7.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 545.003);
        Trial:f11( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "black.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 626.023);
        Trial:f12( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "Folie4_8.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "black.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 857.285);
        Trial:f13( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "Folie4_8.jpg", "black.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "Folie4_14.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 672.194);
        Trial:f14( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "Folie4_8.jpg", "Folie4_9.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "black.jpg", "Folie4_14.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 567.064);
        Trial:f15( ["Folie4_1.jpg", "Folie4_2.jpg", "Folie4_3.jpg", "Folie4_4.jpg", "Folie4_5.jpg", "black.jpg", "Folie4_7.jpg", "Folie4_8.jpg", "Folie4_9.jpg", "Folie4_10.jpg", "Folie4_11.jpg", "Folie4_12.jpg", "Folie4_13.jpg", "Folie4_14.jpg", "Folie4_15.jpg", "Folie4_16.jpg"], 0, 586.498);
        Trial:RATING( "Folie4.jpg", 2, 11284.137);
        Trial:c0( 0, 759.934);
        Trial:c1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_16.jpg"], 0, 535.343);
        Trial:c2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 283.102);
        Trial:c3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 448.82);
        Trial:c4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 382.575);
        Trial:c5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 240.849);
        Trial:c6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 248.747);
        Trial:c7( ["Folie5_1.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 388.079);
        Trial:c8( ["Folie5_1.jpg", "Folie5_2.jpg", "black.jpg", "black.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 275.907);
        Trial:c9( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "black.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 264.467);
        Trial:c10( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 291.397);
        Trial:c11( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 221.468);
        Trial:c12( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "black.jpg", "black.jpg", "Folie5_12.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 361.871);
        Trial:c13( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "black.jpg", "Folie5_11.jpg", "Folie5_12.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 259.348);
        Trial:c14( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "black.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "Folie5_10.jpg", "Folie5_11.jpg", "Folie5_12.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 283.467);
        Trial:c15( ["Folie5_1.jpg", "Folie5_2.jpg", "Folie5_3.jpg", "Folie5_4.jpg", "Folie5_5.jpg", "Folie5_6.jpg", "black.jpg", "Folie5_8.jpg", "Folie5_9.jpg", "Folie5_10.jpg", "Folie5_11.jpg", "Folie5_12.jpg", "Folie5_13.jpg", "Folie5_14.jpg", "Folie5_15.jpg", "Folie5_16.jpg"], 0, 208.783);
        Trial:RATING( "Folie5.jpg", 9, 4630.714);
        Trial:f0( 0, 646.81);
        Trial:f1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 646.523);
        Trial:f2( ["black.jpg", "Folie6_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 482.664);
        Trial:f3( ["black.jpg", "Folie6_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 550.896);
        Trial:f4( ["black.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 548.96);
        Trial:f5( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 868.877);
        Trial:f6( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_16.jpg"], 0, 561.204);
        Trial:f7( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "black.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 844.307);
        Trial:f8( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 811.323);
        Trial:f9( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 503.974);
        Trial:f10( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "black.jpg", "black.jpg", "Folie6_7.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 473.093);
        Trial:f11( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "black.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 1010.556);
        Trial:f12( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "Folie6_8.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "black.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 641.492);
        Trial:f13( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "Folie6_8.jpg", "black.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "Folie6_14.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 346.536);
        Trial:f14( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "Folie6_8.jpg", "Folie6_9.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "black.jpg", "Folie6_14.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 586.483);
        Trial:f15( ["Folie6_1.jpg", "Folie6_2.jpg", "Folie6_3.jpg", "Folie6_4.jpg", "Folie6_5.jpg", "black.jpg", "Folie6_7.jpg", "Folie6_8.jpg", "Folie6_9.jpg", "Folie6_10.jpg", "Folie6_11.jpg", "Folie6_12.jpg", "Folie6_13.jpg", "Folie6_14.jpg", "Folie6_15.jpg", "Folie6_16.jpg"], 0, 227.601);
        Trial:RATING( "Folie6.jpg", 9, 1075.587);
        Trial:i0( 0, 631.113);
        Trial:i1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 588.128);
        Trial:i2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 596.864);
        Trial:i3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 359.241);
        Trial:i4( ["black.jpg", "black.jpg", "black.jpg", "Folie7_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 477.814);
        Trial:i5( ["black.jpg", "black.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 115.763);
        Trial:i6( ["black.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 121.193);
        Trial:i7( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 489.704);
        Trial:i8( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 139.187);
        Trial:i9( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 543.446);
        Trial:i10( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "black.jpg", "black.jpg", "Folie7_16.jpg"], 0, 316.183);
        Trial:i11( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "black.jpg", "Folie7_16.jpg"], 0, 238.319);
        Trial:i12( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "black.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "Folie7_15.jpg", "Folie7_16.jpg"], 0, 93.796);
        Trial:i13( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "black.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "Folie7_11.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "Folie7_15.jpg", "Folie7_16.jpg"], 0, 458.343);
        Trial:i14( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "black.jpg", "Folie7_7.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "Folie7_11.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "Folie7_15.jpg", "Folie7_16.jpg"], 0, 148.339);
        Trial:i15( ["Folie7_1.jpg", "Folie7_2.jpg", "Folie7_3.jpg", "Folie7_4.jpg", "Folie7_5.jpg", "Folie7_6.jpg", "Folie7_7.jpg", "Folie7_8.jpg", "Folie7_9.jpg", "black.jpg", "Folie7_11.jpg", "Folie7_12.jpg", "Folie7_13.jpg", "Folie7_14.jpg", "Folie7_15.jpg", "Folie7_16.jpg"], 0, 80.284);
        Trial:RATING( "Folie7.jpg", 9, 1647.482);
        Trial:c0( 0, 702.789);
        Trial:c1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_16.jpg"], 0, 613.481);
        Trial:c2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 463.187);
        Trial:c3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 445.751);
        Trial:c4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 1013.279);
        Trial:c5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 451.931);
        Trial:c6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 139.159);
        Trial:c7( ["Folie8_1.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 618.608);
        Trial:c8( ["Folie8_1.jpg", "Folie8_2.jpg", "black.jpg", "black.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 460.534);
        Trial:c9( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "black.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 551.35);
        Trial:c10( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 210.811);
        Trial:c11( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 120.257);
        Trial:c12( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "black.jpg", "black.jpg", "Folie8_12.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 448.743);
        Trial:c13( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "black.jpg", "Folie8_11.jpg", "Folie8_12.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 187.906);
        Trial:c14( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "black.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "Folie8_10.jpg", "Folie8_11.jpg", "Folie8_12.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 434.211);
        Trial:c15( ["Folie8_1.jpg", "Folie8_2.jpg", "Folie8_3.jpg", "Folie8_4.jpg", "Folie8_5.jpg", "Folie8_6.jpg", "black.jpg", "Folie8_8.jpg", "Folie8_9.jpg", "Folie8_10.jpg", "Folie8_11.jpg", "Folie8_12.jpg", "Folie8_13.jpg", "Folie8_14.jpg", "Folie8_15.jpg", "Folie8_16.jpg"], 0, 140.233);
        Trial:RATING( "Folie8.jpg", 7, 1154.657);
        Trial:e0( 0, 971.368);
        Trial:e1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_13.jpg", "black.jpg", "black.jpg", "black.jpg"], 0, 683.453);
        Trial:e2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "black.jpg"], 0, 621.659);
        Trial:e3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "black.jpg"], 0, 527.845);
        Trial:e4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "Folie9_16.jpg"], 0, 551.861);
        Trial:e5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "Folie9_16.jpg"], 0, 715.364);
        Trial:e6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "black.jpg", "Folie9_16.jpg"], 0, 683.637);
        Trial:e7( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "black.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 452.299);
        Trial:e8( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 528.67);
        Trial:e9( ["black.jpg", "Folie9_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 590.755);
        Trial:e10( ["black.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 732.973);
        Trial:e11( ["black.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 886.913);
        Trial:e12( ["Folie9_1.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "black.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 642.128);
        Trial:e13( ["Folie9_1.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "Folie9_8.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "black.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 461.142);
        Trial:e14( ["Folie9_1.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "black.jpg", "black.jpg", "Folie9_7.jpg", "Folie9_8.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "Folie9_11.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 437.896);
        Trial:e15( ["Folie9_1.jpg", "Folie9_2.jpg", "Folie9_3.jpg", "Folie9_4.jpg", "Folie9_5.jpg", "black.jpg", "Folie9_7.jpg", "Folie9_8.jpg", "Folie9_9.jpg", "Folie9_10.jpg", "Folie9_11.jpg", "Folie9_12.jpg", "Folie9_13.jpg", "Folie9_14.jpg", "Folie9_15.jpg", "Folie9_16.jpg"], 0, 216.474);
        Trial:RATING( "Folie9.jpg", 9, 1394.535);
        Trial:c0( 0, 714.838);
        Trial:c1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_16.jpg"], 0, 504.385);
        Trial:c2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 281.452);
        Trial:c3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 188.59);
        Trial:c4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 408.058);
        Trial:c5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 58.739);
        Trial:c6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 385.794);
        Trial:c7( ["Folie10_1.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 441.414);
        Trial:c8( ["Folie10_1.jpg", "Folie10_2.jpg", "black.jpg", "black.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 204.631);
        Trial:c9( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "black.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 278.689);
        Trial:c10( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 364.389);
        Trial:c11( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 57.456);
        Trial:c12( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "black.jpg", "black.jpg", "Folie10_12.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 459.213);
        Trial:c13( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "black.jpg", "Folie10_11.jpg", "Folie10_12.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 86.942);
        Trial:c14( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "black.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "Folie10_10.jpg", "Folie10_11.jpg", "Folie10_12.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 408.559);
        Trial:c15( ["Folie10_1.jpg", "Folie10_2.jpg", "Folie10_3.jpg", "Folie10_4.jpg", "Folie10_5.jpg", "Folie10_6.jpg", "black.jpg", "Folie10_8.jpg", "Folie10_9.jpg", "Folie10_10.jpg", "Folie10_11.jpg", "Folie10_12.jpg", "Folie10_13.jpg", "Folie10_14.jpg", "Folie10_15.jpg", "Folie10_16.jpg"], 0, 118.785);
        Trial:RATING( "Folie10.jpg", 9, 2114.861);
        Trial:i0( 0, 788.05);
        Trial:i1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 531.04);
        Trial:i2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 642.941);
        Trial:i3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 406.798);
        Trial:i4( ["black.jpg", "black.jpg", "black.jpg", "Folie11_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 467.748);
        Trial:i5( ["black.jpg", "black.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 135.75);
        Trial:i6( ["black.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 186.295);
        Trial:i7( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 541.268);
        Trial:i8( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 179.82);
        Trial:i9( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 853.453);
        Trial:i10( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "black.jpg", "black.jpg", "Folie11_16.jpg"], 0, 200.506);
        Trial:i11( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "black.jpg", "Folie11_16.jpg"], 0, 525.99);
        Trial:i12( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "black.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "Folie11_15.jpg", "Folie11_16.jpg"], 0, 38.903);
        Trial:i13( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "black.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "Folie11_11.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "Folie11_15.jpg", "Folie11_16.jpg"], 0, 451.225);
        Trial:i14( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "black.jpg", "Folie11_7.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "Folie11_11.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "Folie11_15.jpg", "Folie11_16.jpg"], 0, 3.98);
        Trial:i15( ["Folie11_1.jpg", "Folie11_2.jpg", "Folie11_3.jpg", "Folie11_4.jpg", "Folie11_5.jpg", "Folie11_6.jpg", "Folie11_7.jpg", "Folie11_8.jpg", "Folie11_9.jpg", "black.jpg", "Folie11_11.jpg", "Folie11_12.jpg", "Folie11_13.jpg", "Folie11_14.jpg", "Folie11_15.jpg", "Folie11_16.jpg"], 0, 242.685);
        Trial:RATING( "Folie11.jpg", 8, 1021.113);
        Trial:f0( 0, 778.779);
        Trial:f1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 656.475);
        Trial:f2( ["black.jpg", "Folie12_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 881.112);
        Trial:f3( ["black.jpg", "Folie12_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 565.514);
        Trial:f4( ["black.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 641.669);
        Trial:f5( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 530.642);
        Trial:f6( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_16.jpg"], 0, 702.688);
        Trial:f7( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "black.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 537.53);
        Trial:f8( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 486.824);
        Trial:f9( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 522.092);
        Trial:f10( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "black.jpg", "black.jpg", "Folie12_7.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 444.523);
        Trial:f11( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "black.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 516.417);
        Trial:f12( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "Folie12_8.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "black.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 553.803);
        Trial:f13( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "Folie12_8.jpg", "black.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "Folie12_14.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 385.75);
        Trial:f14( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "Folie12_8.jpg", "Folie12_9.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "black.jpg", "Folie12_14.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 299.611);
        Trial:f15( ["Folie12_1.jpg", "Folie12_2.jpg", "Folie12_3.jpg", "Folie12_4.jpg", "Folie12_5.jpg", "black.jpg", "Folie12_7.jpg", "Folie12_8.jpg", "Folie12_9.jpg", "Folie12_10.jpg", "Folie12_11.jpg", "Folie12_12.jpg", "Folie12_13.jpg", "Folie12_14.jpg", "Folie12_15.jpg", "Folie12_16.jpg"], 0, 205.407);
        Trial:RATING( "Folie12.jpg", 9, 1704.335);
        Trial:i0( 0, 937.578);
        Trial:i1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 497.889);
        Trial:i2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 661.376);
        Trial:i3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 487.821);
        Trial:i4( ["black.jpg", "black.jpg", "black.jpg", "Folie13_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 523.892);
        Trial:i5( ["black.jpg", "black.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 428.746);
        Trial:i6( ["black.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 648.514);
        Trial:i7( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 395.087);
        Trial:i8( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 530.81);
        Trial:i9( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 455.77);
        Trial:i10( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "black.jpg", "black.jpg", "Folie13_16.jpg"], 0, 611.875);
        Trial:i11( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "black.jpg", "Folie13_16.jpg"], 0, 585.494);
        Trial:i12( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "black.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "Folie13_15.jpg", "Folie13_16.jpg"], 0, 733.174);
        Trial:i13( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "black.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "Folie13_11.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "Folie13_15.jpg", "Folie13_16.jpg"], 0, 533.974);
        Trial:i14( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "black.jpg", "Folie13_7.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "Folie13_11.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "Folie13_15.jpg", "Folie13_16.jpg"], 0, 320.198);
        Trial:i15( ["Folie13_1.jpg", "Folie13_2.jpg", "Folie13_3.jpg", "Folie13_4.jpg", "Folie13_5.jpg", "Folie13_6.jpg", "Folie13_7.jpg", "Folie13_8.jpg", "Folie13_9.jpg", "black.jpg", "Folie13_11.jpg", "Folie13_12.jpg", "Folie13_13.jpg", "Folie13_14.jpg", "Folie13_15.jpg", "Folie13_16.jpg"], 0, 238.135);
        Trial:RATING( "Folie13.jpg", 9, 965.811);
        Trial:f0( 0, 981.47);
        Trial:f1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 699.459);
        Trial:f2( ["black.jpg", "Folie14_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 843.355);
        Trial:f3( ["black.jpg", "Folie14_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 638.977);
        Trial:f4( ["black.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 623.611);
        Trial:f5( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 771.334);
        Trial:f6( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_16.jpg"], 0, 583.607);
        Trial:f7( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "black.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 571.566);
        Trial:f8( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 729.152);
        Trial:f9( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 538.228);
        Trial:f10( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "black.jpg", "black.jpg", "Folie14_7.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 506.068);
        Trial:f11( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "black.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 2498.3);
        Trial:f12( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "Folie14_8.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "black.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 1891.672);
        Trial:f13( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "Folie14_8.jpg", "black.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "Folie14_14.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 517.944);
        Trial:f14( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "Folie14_8.jpg", "Folie14_9.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "black.jpg", "Folie14_14.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 560.26);
        Trial:f15( ["Folie14_1.jpg", "Folie14_2.jpg", "Folie14_3.jpg", "Folie14_4.jpg", "Folie14_5.jpg", "black.jpg", "Folie14_7.jpg", "Folie14_8.jpg", "Folie14_9.jpg", "Folie14_10.jpg", "Folie14_11.jpg", "Folie14_12.jpg", "Folie14_13.jpg", "Folie14_14.jpg", "Folie14_15.jpg", "Folie14_16.jpg"], 0, 368.329);
        Trial:RATING( "Folie14.jpg", 9, 1634.592);
        Trial:e0( 0, 866.455);
        Trial:e1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_13.jpg", "black.jpg", "black.jpg", "black.jpg"], 0, 544.803);
        Trial:e2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "black.jpg"], 0, 553.474);
        Trial:e3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "black.jpg"], 0, 586.62);
        Trial:e4( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "Folie15_16.jpg"], 0, 512.633);
        Trial:e5( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "Folie15_16.jpg"], 0, 826.514);
        Trial:e6( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "black.jpg", "Folie15_16.jpg"], 0, 655.422);
        Trial:e7( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "black.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 557.502);
        Trial:e8( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 561.434);
        Trial:e9( ["black.jpg", "Folie15_2.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 454.399);
        Trial:e10( ["black.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 439.92);
        Trial:e11( ["black.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 633.256);
        Trial:e12( ["Folie15_1.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "black.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 558.826);
        Trial:e13( ["Folie15_1.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "Folie15_8.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "black.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 352.605);
        Trial:e14( ["Folie15_1.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "black.jpg", "black.jpg", "Folie15_7.jpg", "Folie15_8.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "Folie15_11.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 184.298);
        Trial:e15( ["Folie15_1.jpg", "Folie15_2.jpg", "Folie15_3.jpg", "Folie15_4.jpg", "Folie15_5.jpg", "black.jpg", "Folie15_7.jpg", "Folie15_8.jpg", "Folie15_9.jpg", "Folie15_10.jpg", "Folie15_11.jpg", "Folie15_12.jpg", "Folie15_13.jpg", "Folie15_14.jpg", "Folie15_15.jpg", "Folie15_16.jpg"], 0, 261.888);
        Trial:RATING( "Folie15.jpg", 9, 929.405);
        Trial:i0( 0, 804.724);
        Trial:i1( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 675.839);
        Trial:i2( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 443.039);
        Trial:i3( ["black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 442.949);
        Trial:i4( ["black.jpg", "black.jpg", "black.jpg", "Folie16_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 457.675);
        Trial:i5( ["black.jpg", "black.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 272.877);
        Trial:i6( ["black.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 283.076);
        Trial:i7( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 691.948);
        Trial:i8( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 230.825);
        Trial:i9( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "black.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 640.325);
        Trial:i10( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "black.jpg", "black.jpg", "Folie16_16.jpg"], 0, 313.013);
        Trial:i11( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "black.jpg", "Folie16_16.jpg"], 0, 157.589);
        Trial:i12( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "black.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "Folie16_15.jpg", "Folie16_16.jpg"], 0, 436.194);
        Trial:i13( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "black.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "Folie16_11.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "Folie16_15.jpg", "Folie16_16.jpg"], 0, 157.271);
        Trial:i14( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "black.jpg", "Folie16_7.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "Folie16_11.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "Folie16_15.jpg", "Folie16_16.jpg"], 0, 356.864);
        Trial:i15( ["Folie16_1.jpg", "Folie16_2.jpg", "Folie16_3.jpg", "Folie16_4.jpg", "Folie16_5.jpg", "Folie16_6.jpg", "Folie16_7.jpg", "Folie16_8.jpg", "Folie16_9.jpg", "black.jpg", "Folie16_11.jpg", "Folie16_12.jpg", "Folie16_13.jpg", "Folie16_14.jpg", "Folie16_15.jpg", "Folie16_16.jpg"], 0, 326.243);
        Trial:RATING( "Folie16.jpg", 9, 834.434);
      }
      Block()
      {
        Trial:INSTTEST( 0, 3651.466);
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( "*");
        Trial:COUNT( " ");
        Trial:COUNT( " ");
      }
      Block()
      {
        Trial:Tf( "f", 1, "f", 1, 6122.891);
        Trial:Te( "e", 1, "e", 1, 1997.33);
        Trial:Td( "d", 1, "d", 1, 988.759);
        Trial:Tc( "c", 1, "c", 1, 3665.096);
        Trial:Tb( "b", 1, "b", 1, 4775.02);
        Trial:Ta( "a", 1, "a", 1, 2669.773);
        Trial:Tw( "w", 7, "w", 7, 1920.025);
        Trial:Tv( "v", 7, "v", 1, 216.408);
        Trial:Tu( "u", 1, "u", 7, 297.255);
        Trial:Tz( "z", 7, "z", 7, 240.097);
        Trial:Ty( "y", 7, "y", 1, 288.085);
        Trial:Tx( "x", 7, "x", 7, 321.113);
      }
      Block()
      {
        Trial:DEMO( "What is your major?", "psyc", 5188.984);
        Trial:DEMO( "How old are you?", 21, 2163.038);
        Trial:RL( 1, 1530.053);
        Trial:KL( 1, 1238.158);
        Trial:TIPP( 0, 12249.725);
        Trial:DEMO( "Did you know any of the Chinese characters?", "no", 2229.521);
      }
    }
  }
}
